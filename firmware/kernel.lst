MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 
  000004D2            00002 serial  equ     .1234
                      00003 
                      00004 ;                     ____    ____                                              
                      00005 ;             MCLR  >|    \__/    |X  B7  PGD                                   
                      00006 ;      ANODE 1  A0  <|            |<  B6  PGC, SW3...6 in               
                      00007 ;      ANODE 2  A1  <|            |>  B5  Vdd ON/OFF                    
                      00008 ;      ANODE 3  A2  <|            |X  B4  AUX data                              
                      00009 ;      ANODE 4  A3  <|            |>  B3  cathode driver DATA   
                      00010 ;      ANODE 5  A4  <|            |>  B2  AUX clock                             
                      00011 ;      ANODE 6  A5  <|   PIC18LF  |>  B1  cathode driver CLOCK  
                      00012 ;              Vss  <|    25K50   |<  B0  KEY INT                               
                      00013 ;      ANODE 8  A7  <|            |=  Vdd                               
                      00014 ;      ANODE 7  A6  <|            |=  Vss                               
                      00015 ;  USB V detect C0  >|            |<  C7  RXD IR in                             
                      00016 ;  CCP2 carrier C1  <|            |>  C6  TXD IR out                    
                      00017 ;  LED out/ANin C2  X|            |X  C5  USB D+                        
                      00018 ;             Vcap  =|____________|X  C4  USB D-                        
                      00019 ;                                                                                                       
                                                    
                      00020 ;       FOLLOWING DEFINITIONS ARE LOCATED IN FILE MASCROS.INC:          
                      00021 ;                                                                                                       
                                                    
                      00022 ;       keyint                  PORTB,0         key "INT" in                                    
                      00023 ;       clk                             LATB,1          cathode driver CLOCK                    
                      00024 ;       accscl                  LATB,2          AUX clock out latch                             
                      00025 ;       accscl.port             PORTB,2         AUX clock in port                               
                      00026 ;       accscl.ts               TRISB,2         AUX clock TRIS bit                              
                      00027 ;       sdo                             LATB,3          cathode driver DATA                             
                      00028 ;       accsda                  LATB,4          AUX data out latch                              
                      00029 ;       accsda.port             PORTB,4         AUX data in port                                
                      00030 ;       accsda.ts               TRISB,4         AUX data TRIS bit                               
                      00031 ;       vdd                             LATB,5          Vdd ON/OFF switch                               
                      00032 ;       keys                    PORTB,6         PGC / SW3...6 input                             
                      00033 ;       usbv                    PORTC,0         USB V detect                                    
                      00034 ;                                                                                                       
                                                    
                      00035 
                      00036         LIST P=18LF25K50
                      00037         #include <p18lf25k50.inc>
                      00001         LIST
                      00002 
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC18LF25K50 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;==========================================================================
                      00008 
                      02205         LIST
                      00038         #include <macros.inc>
                      00001 
  00000000            00002 Offset  equ     0x0000
                      00003 
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00004 #define keyint          PORTB,0         ; key "INT" in
                      00005 #define clk                     LATB,1          ; cathode driver CLOCK
                      00006 #define accscl          LATB,2          ; AUX clock out latch
                      00007 #define accscl.port     PORTB,2         ; AUX clock in port
                      00008 #define accscl.ts       TRISB,2         ; AUX clock TRIS bit
                      00009 #define sdo                     LATB,3          ; cathode driver DATA
                      00010 #define accsda          LATB,4          ; AUX data out latch
                      00011 #define accsda.port     PORTB,4         ; AUX data in port
                      00012 #define accsda.ts       TRISB,4         ; AUX data TRIS bit
                      00013 #define vdd                     LATB,5          ; Vdd ON/OFF switch
                      00014 #define keys            PORTB,6         ; PGC / SW3...6 input
                      00015 #define usbv            PORTC,0         ; USB V detect
                      00016 
                      00017 ;******************************************************************
                      00018 ;       system flags
                      00019 
                      00020 ifz             macro
                      00021         btfsc   STATUS,Z,ACCESS
                      00022                 endm
                      00023 ifnz    macro
                      00024         btfss   STATUS,Z,ACCESS
                      00025                 endm
                      00026 ifc             macro
                      00027         btfsc   STATUS,C,ACCESS
                      00028                 endm
                      00029 ifnc    macro
                      00030         btfss   STATUS,C,ACCESS
                      00031                 endm
                      00032 rcf             macro
                      00033         bcf             STATUS,C,ACCESS
                      00034                 endm
                      00035 scf             macro
                      00036         bsf             STATUS,C,ACCESS
                      00037                 endm
                      00038 
                      00039 ;******************************************************************
                      00040 
                      00041 ; macro sync150
                      00042 sync150 macro
                      00043         btfss   Flag,2,ACCESS           ; 150 Hz handshaking sync
                      00044         bra             $-2
                      00045         bcf             Flag,2,ACCESS           ; reset sync flag
                      00046                 endm
                      00047 
                      00048 ; macro sync150x8
                      00049 sync150x8       macro
                      00050         btfss   Flag,1,ACCESS           ; 150x8 Hz handshaking sync
                      00051         bra             $-2
                      00052         bcf             Flag,1,ACCESS           ; reset sync flag
                      00053                 endm
                      00054 
                      00055 ;******************************************************************
                      00056 
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00057 onebit  macro   bitpos
                      00058         bcf             sdo,ACCESS
                      00059         btfsc   INDF0,bitpos
                      00060         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
                      00061         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
                      00062         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00063                 endm
                      00064 
                      00065 ;******************************************************************
                      00066 
                      00067 ; macro iorbuf
                      00068 iorbuf  macro   bufaddress
                      00069         movf    Buffer2+bufaddress,w,BANKED
                      00070         iorwf   Buffer+bufaddress,f,BANKED
                      00071                 endm
                      00072 
                      00073 ;******************************************************************
                      00074 
                      00075 ; macro iorbuf3
                      00076 iorbuf3 macro   buf3address
                      00077         movf    Buffer2+buf3address,w,BANKED
                      00078         iorwf   Buffer3+buf3address,f,BANKED
                      00079                 endm
                      00080 
                      00081 ;******************************************************************
                      00082 
                      00083 ; macro overlap
                      00084 overlap macro   overaddress
                      00085         movf    Buffer2+overaddress,w,BANKED
                      00086         andwf   Buffer+overaddress,w,BANKED
                      00087         bnz             ovl.found
                      00088                 endm
                      00089 
                      00090 ;******************************************************************
                      00091 
                      00092 ; macro test.new
                      00093 test.new        macro
                      00094         movf    RXpatience,f,access
                      00095 
                      00096 
                      00097                 endm
                      00098 
                      00099 ;******************************************************************
                      00100 
                      00101 serialx2        macro
                      00102         rcf
                      00103         rlcf    RXserial+0,f,access
                      00104         rlcf    RXserial+1,f,access
                      00105         bc              preset.pat                      ; number overflow, ignore it
                      00106                 endm
                      00107 ;******************************************************************
                      00039 
                      00040 ;*******************************************************************************
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00041 ;                       CONFIGURATION REGISTERS (not used if firmware is bootloaded!!!)         
                      00042 ;*******************************************************************************
                      00043 
                      00044  config PLLSEL = PLL3X      ; 3x clock multiplier
                      00045  config CFGPLLEN = ON       ; PLL Enabled
                      00046  config CPUDIV = NOCLKDIV   ; 1:1 mode
                      00047  config LS48MHZ = SYS48X8   ; System clock at 48 MHz, USB clock divider is set to 8
                      00048  config FOSC = INTOSCIO     ; Internal oscillator
                      00049  config PCLKEN = OFF        ; Primary oscillator disabled
                      00050  config FCMEN = OFF         ; Fail-Safe Clock Monitor disabled
                      00051  config IESO = OFF          ; Oscillator Switchover mode disabled
                      00052  config nPWRTEN = ON        ; Power up timer enabled
                      00053  config BOREN = OFF         ; BOR disabled
                      00054  config nLPBOR = OFF        ; Low-Power Brown-out Reset disabled
                      00055  config WDTEN = OFF         ; WDT disabled in hardware (SWDTEN ignored)
                      00056  config CCP2MX = RC1        ; CCP2 input/output is multiplexed with RC1
                      00057  config PBADEN = OFF        ; PORTB<5:0> pins are configured as digital I/O on Reset
                      00058  config MCLRE = ON          ; MCLR pin enabled; RE3 input disabled
                      00059  config STVREN = OFF        ; Stack full/underflow will not cause Reset
                      00060  config LVP = OFF           ; Single-Supply ICSP disabled
                      00061  config XINST = OFF         ; Instruction set extension and Indexed Addressing mode disabled
                      00062  config DEBUG = OFF         ; Bkgnd debugger disabled, RB6 and RB7 configured as gp I/O pins
                      00063  config CP0 = OFF           ; Block 0 is not code-protected
                      00064  config CP1 = OFF           ; Block 1 is not code-protected
                      00065  config CPB = OFF           ; Boot block is not code-protected
                      00066  config CPD = OFF           ; Data EEPROM is not code-protected
                      00067  config WRT0 = OFF          ; Block 0 (0800-1FFFh) is not write-protected
                      00068  config WRT1 = OFF          ; Block 1 (2000-3FFFh) is not write-protected
                      00069  config WRTC = OFF          ; Configuration registers (300000-3000FFh) are not write-protected
                      00070  config WRTB = OFF          ; Boot block (0000-7FFh) is not write-protected
                      00071  config WRTD = OFF          ; Data EEPROM is not write-protected
                      00072  config EBTR0 = OFF         ; Block 0 is not protected from table reads executed in other blocks
                      00073  config EBTRB = OFF         ; Boot block is not protected from table reads executed in other blocks
                      00074 
  0000                00075  global Flag, KeyEdge, BitMask, Rotor0, Rotor1, Rotor2, Rotor3, rnd, cont, tx.byte
  0000                00076  global Buffer, Buffer2, BufferPause, Ma0, Ma1, Ma2, Ma3, Mc0, Mc1, Mc2, Mc3, tx.ascnum
  0000                00077  global RXptr, Received, RXpatience, RXFlag, MYserial
                      00078 
                      00079 
  00000000            00080 access  equ     0
  00000001            00081 banked  equ     1
                      00082 
                      00083 ;*******************************************************************************
                      00084 ;                                                       DATA  MEMORY                                    
                                                                    
                      00085 ;*******************************************************************************
                      00086 
                      00087 kernel_ram      udata_acs       0
                      00088 
000000                00089 Brightness      res     1       ; display ON time, 0...15, used for dimming (15 = max brightness)
                      00090                                         ; Brightness should be at address 0 (cleared by POR only!)
                      00091 
000001                00092 Flag    res 1   ; bit 0 set = pause mode
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00093                                 ; bit 1 set = Timer interrupt (1200 Hz) handshaking (set only)
                      00094                                 ; bit 2 set = full scan (150 Hz) handshaking (set only)
                      00095                                 ; bit 3 set = 
                      00096                                 ; bit 4 set = INT in second cycle (OFF period)
                      00097                                 ; bit 5 set = Only two steps for key 0, without pause
                      00098                                 ; bit 6 set = Display message received
                      00099                                 ; bit 7 set = column cathode
                      00100 
000002                00101 RXFlag  res 1   ; bit 0 set = RX enable
                      00102                                 ; bit 1 set = RX header reception in progress
                      00103                                 ; bit 2 set = RX in progress
                      00104                                 ; bit 3 set = 
                      00105                                 ; bit 4 set = 
                      00106                                 ; bit 5 set = 
                      00107                                 ; bit 6 set = 
                      00108                                 ; bit 7 set = 
                      00109 
000003                00110 KeyEdge         res 1   ; bits 3,2,1,0 are flags, set when keys 3,2,1,0 are JUST pressed
                      00111                                         ; must be cleared in user routine
                      00112                                         ; bit 0 set if key 0 (INT) just pressed
                      00113                                         ; bit 1 set if key 1 (left) just pressed
                      00114                                         ; bit 2 set if key 2 (up) just pressed
                      00115                                         ; bit 3 set if key 3 (down) just pressed
                      00116                                         ; bit 4 set if key 4 (right) just pressed
                      00117 
000004                00118 BitMask         res 1   ; 10000000...00000001, shift right (CA) or 0...7 row counter (CC)
000005                00119 BitMask2        res 1   ; 11111110...01111111, shift left
000006                00120 T0period        res     1       ; total (OFF+ON) period for T0
000007                00121 Rotor0          res 1   ; used for key 0 (INT) debouncer
000008                00122 Rotor1          res 1   ; used for key 1 (left) debouncer
000009                00123 Rotor2          res 1   ; used for key 2 (up) debouncer
00000A                00124 Rotor3          res 1   ; used for key 3 (down) debouncer
00000B                00125 Rotor4          res 1   ; used for key 4 (right) debouncer
00000C                00126 Ma0                     res 1   ; rnd seed
00000D                00127 Ma1                     res 1
00000E                00128 Ma2                     res 1
00000F                00129 Ma3                     res 1
000010                00130 Mc0                     res 1   ; rnd acc
000011                00131 Mc1                     res 1
000012                00132 Mc2                     res 1
000013                00133 Mc3                     res 1
000014                00134 InnerInt        res 1   ; inner loop counter
000015                00135 OuterInt        res 1   ; outer loop counter
000016                00136 OutPlusInt      res 1   ; one more outer loop counter
000017                00137 FSR0temp        res     2       ; temporary FSR0 during INT
000019                00138 RXptr           res     1       ; low RXD buffer pointer, high is always =6
00001A                00139 Received        res 1   ; Received chars counter, 0...255 in interrupt RX buffer service routine
00001B                00140 RXpatience      res     1       ; Patience counter, preset to 240 (200ms) when byte received, countdown 
                            to 0
00001C                00141 RXserial        res     2       ; received serial number BINARY, ready for comparison
00001E                00142 MYserial        res     2       ; serial number from ROM addr 0x000E
                      00143 
                      00144 banked_ram      udata   0x0700
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00145 
000700                00146 Buffer          res .16 ; display buffer, upper row first, bit 7 = left column, bit set = LED on
000710                00147 Buffer2         res .16 ; aux buffer (not displayed by interrupt display refresh)
000720                00148 BufferPause     res .16 ; aux buffer (displayed only during pause)
                      00149 
                      00150 ;*******************************************************************************
                      00151 ;                                                       C  O  D  E                                      
                                                                            
                      00152 ;*******************************************************************************
                      00153 
                      00154         code    Offset+0x0000
000000 EF?? F???      00155         goto    main
                      00156 
                      00157 ;*******************************************************************************
                      00158 ;                               TIMER2 AND EXT0 INTERRUPT AND SERIAL NUMBER                             
                                            
                      00159 ;*******************************************************************************
                      00160 
                      00161         org             Offset+0x0008           ; T2 int 800 Hz
000008 D???           00162         bra             interrupt_8
                      00163 
                      00164         org             Offset+0x000E           ; serial number
00000E 04D2           00165         dw              serial
                      00166 
000010                00167 interrupt_8
                      00168         #include <int.inc>
                      00001 ;*****************************************************************************************      
                      00002 ;       TIMER0  INTERRUPT (vector = 0x18 or 0x1018)                                                     
                                                                    
                      00003 ;       Services: - 8x16 LED display (points to Buffer or BufferPause, determined by Flag.0             
                      00004 ;                         - 5 keys (debouncer and edge detection)                                       
                                                                    
                      00005 ;                         - Brightness inc/dec with physiological linearization                         
                                                    
                      00006 ;                         - Pause flag (sets/resets Flag.0) if Flag.5 is reset                          
                                                    
                      00007 ;                         - Sleep/wake up                                                               
                                                                                            
                      00008 ;       Default interrupt frequency:  12M/(78*128) = 1202 Hz                                            
                                                    
                      00009 ;       That gives about 150 Hz display refresh rate                                                    
                                                            
                      00010 ;       Register Brightness (0...15) affects duty cycle only                                            
                                                    
                      00011 ;       The best way to affect the display refresh rate is to edit table "bright.tab"                   
                      00012 ;       It is also possible to change T0 prescaler setting (very coarse, in *2 steps)                   
                      00013 ;       NOTE: This is not the only interrupt, as INT0 is used to wake up the                            
                                    
                      00014 ;                 device from sleep. As the device actually sleeps in interrupt                         
                                            
                      00015 ;                 routine, and external INT0 (which is used to wake up the device                       
                                            
                      00016 ;                 from sleep) can have only the high priority, this TMR2 interrupt                      
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                                            
                      00017 ;                 must have the same priority level, or interrupt nesting has to be                     
                                            
                      00018 ;                 disabled (otherwise, FAST registers will be lost during wake-up)                      
                                            
                      00019 ;*****************************************************************************************      
                      00020 
000010 010?           00021         banksel Buffer                  ; all banked modes will address bank 7 in this routine
                      00022 
                      00023 ; ignore interrupt if it was INT0                                                                       
                                            
000012 B2F2           00024         btfsc   INTCON,INT0IF,access
000014 EF?? F???      00025         goto    it.was.int0
                      00026 ; brightness                                                                                            
                                                            
                      00027 
000018 CFF6 F???      00028         movff   TBLPTRL,FSR0temp+0      ; save TBLPTR
00001C CFF7 F???      00029         movff   TBLPTRH,FSR0temp+1
                      00030 
000020 0E??           00031         movlw   high bright.tab
000022 6EF7           00032         movwf   TBLPTRH,access
000024 5000           00033         movf    Brightness,w,access     ; Brightness = 0...15
000026 0B0F           00034         andlw   0x0f                            ; just in case
000028 6E00           00035         movwf   Brightness,access       ; Brightness repaired
00002A 24E8           00036         addwf   WREG,w,access           ; W = Brightness*2 = 0...30
                      00037 
00002C 7800           00038         btg             Flag,4,access           ; bit 4 set: INT in 2nd cycle (OFF period)
00002E B800           00039         btfsc   Flag,4,access
000030 2AE8           00040         incf    WREG,f,access           ; if INT is in 2nd cycle (OFF period), point to 2nd byte
                      00041 
000032 0F??           00042         addlw   low bright.tab
000034 6EF6           00043         movwf   TBLPTRL,access
                      00044         ifc
000036 B0D8               M         btfsc   STATUS,C,ACCESS
000038 2AF7           00045         incf    TBLPTRH,f,access        ; if TBLPTRL overflowed
                      00046 
00003A 0008           00047         tblrd*                                          ; read T0 timing from table
00003C CFF5 FFD6      00048         movff   TABLAT,TMR0L            ; TMR0L <-------------
                      00049 
000040 C??? FFF6      00050         movff   FSR0temp+0,TBLPTRL      ; restore TBLPTR
000044 C??? FFF7      00051         movff   FSR0temp+1,TBLPTRH
                      00052 
000048 B800           00053         btfsc   Flag,4,access
00004A 6889           00054         setf    LATA,access                     ; in OFF period, turn off andode drivers
00004C B800           00055         btfsc   Flag,4,access
00004E EF?? F???      00056         goto    exit2                           ; in OFF period, nothing else should be executed
                      00057                                                         ; first cycle (ON period)
000052 CFE9 F???      00058         movff   FSR0L,FSR0temp+0        ; save FSR0
000056 CFEA F???      00059         movff   FSR0H,FSR0temp+1        ; save FSR0
                      00060 
                      00061 ; display refresh                                                                                       
                                                            
00005A AE00           00062         btfss   Flag,7,access           ; bit 7 set = common cathode
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00005C D???           00063         bra             column.anode
                      00064 
                      00065 ;---------------------------------------------------------------------------
                      00066 ;                                               COLUMN CATHODE DRIVER                                   
                                                    
                      00067 ;                                                                                                       
                                                                            
                      00068 
                      00069         scf                                                     ; set carry, as Bitmask2 is inverse
00005E 80D8               M         bsf             STATUS,C,ACCESS
000060 3600           00070         rlcf    BitMask2,f,access       ; Shift Left BitMask2      <--- 11111011 <--- 1
                      00071 
000062 2800           00072         incf    BitMask,w,access
000064 0B07           00073         andlw   0x07
000066 6E00           00074         movwf   BitMask,access          ; BitMask count up 0...7
                      00075         ifz
000068 B4D8               M         btfsc   STATUS,Z,ACCESS
00006A 9000           00076         bcf             BitMask2,0,access       ; bit reconstruction BitMask2
                      00077 
00006C EE?? F0??      00078         lfsr    FSR0,Buffer+8           ; frame buffer pointer
000070 B0??           00079         btfsc   Flag,0                          ; bit 0 set = pause
000072 EE?? F0??      00080         lfsr    FSR0,BufferPause+8      ; pause buffer pointer
000076 26E9           00081         addwf   FSR0L,f,access
                      00082         onebit  0
000078 968A               M         bcf             sdo,ACCESS
00007A B0EF               M         btfsc   INDF0,0
00007C 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
00007E 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000080 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00083         onebit  1
000082 968A               M         bcf             sdo,ACCESS
000084 B2EF               M         btfsc   INDF0,1
000086 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
000088 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00008A 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00084         onebit  2
00008C 968A               M         bcf             sdo,ACCESS
00008E B4EF               M         btfsc   INDF0,2
000090 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
000092 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000094 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00085         onebit  3
000096 968A               M         bcf             sdo,ACCESS
000098 B6EF               M         btfsc   INDF0,3
00009A 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
00009C 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00009E 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00086         onebit  4
0000A0 968A               M         bcf             sdo,ACCESS
0000A2 B8EF               M         btfsc   INDF0,4
0000A4 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
0000A6 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0000A8 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00087         onebit  5
0000AA 968A               M         bcf             sdo,ACCESS
0000AC BAEF               M         btfsc   INDF0,5
0000AE 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
0000B0 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0000B2 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00088         onebit  6
0000B4 968A               M         bcf             sdo,ACCESS
0000B6 BCEF               M         btfsc   INDF0,6
0000B8 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
0000BA 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0000BC 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00089         onebit  7
0000BE 968A               M         bcf             sdo,ACCESS
0000C0 BEEF               M         btfsc   INDF0,7
0000C2 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
0000C4 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0000C6 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00090 
0000C8 0EF8           00091         movlw   -.8
0000CA 26E9           00092         addwf   FSR0L,f,access
                      00093         onebit  0
0000CC 968A               M         bcf             sdo,ACCESS
0000CE B0EF               M         btfsc   INDF0,0
0000D0 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
0000D2 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0000D4 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00094         onebit  1
0000D6 968A               M         bcf             sdo,ACCESS
0000D8 B2EF               M         btfsc   INDF0,1
0000DA 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
0000DC 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0000DE 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00095         onebit  2
0000E0 968A               M         bcf             sdo,ACCESS
0000E2 B4EF               M         btfsc   INDF0,2
0000E4 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
0000E6 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0000E8 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00096         onebit  3
0000EA 968A               M         bcf             sdo,ACCESS
0000EC B6EF               M         btfsc   INDF0,3
0000EE 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
0000F0 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0000F2 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00097         onebit  4
0000F4 968A               M         bcf             sdo,ACCESS
0000F6 B8EF               M         btfsc   INDF0,4
0000F8 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
0000FA 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0000FC 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00098         onebit  5
0000FE 968A               M         bcf             sdo,ACCESS
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000100 BAEF               M         btfsc   INDF0,5
000102 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
000104 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000106 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00099         onebit  6
000108 968A               M         bcf             sdo,ACCESS
00010A BCEF               M         btfsc   INDF0,6
00010C 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
00010E 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000110 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00100         onebit  7
000112 968A               M         bcf             sdo,ACCESS
000114 BEEF               M         btfsc   INDF0,7
000116 868A               M         bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" pin
000118 928A               M         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00011A 828A               M         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00101 
                      00102 ; Sets one anode, depended on BitMask
00011C 5000           00103         movf    BitMask2,w,access
00011E 6E89           00104         movwf   LATA,access
000120 0F02           00105         addlw   .2
                      00106         ifz
000122 B4D8               M         btfsc   STATUS,Z,ACCESS
000124 8400           00107         bsf             Flag,2,access           ; 150 Hz full scan handshaking flag (should be after las
                            t anode!)
                      00108 
000126 EF?? F???      00109         goto    column.any
                      00110 
                      00111 ;---------------------------------------------------------------------------
                      00112 ;                                               COLUMN ANODE DRIVER                                     
                                                            
                      00113 ;                                                                                                       
                                                                            
00012A                00114 column.anode
                      00115 ; rotates with no carry BitMask (slower than single RLNCF, but more safe)
                      00116         scf                                                     ; set carry, as Bitmask2 is inverse
00012A 80D8               M         bsf             STATUS,C,ACCESS
00012C 3600           00117         rlcf    BitMask2,f,access       ; Shift Left BitMask2      <--- 11111011 <--- 1
                      00118         rcf                                                     ; clear Carry
00012E 90D8               M         bcf             STATUS,C,ACCESS
000130 3200           00119         rrcf    BitMask,f,access        ; Shift Right BitMask      <--- 00000100 <--- 0
000132 E1??           00120         bnz             no.reconstruction
000134 8E00           00121         bsf             BitMask,7,access        ; bit reconstruction BitMask
000136 9000           00122         bcf             BitMask2,0,access       ; bit reconstruction BitMask2
000138                00123 no.reconstruction
000138 EE?? F0??      00124         lfsr    FSR0,Buffer+.15         ; frame buffer pointer
00013C B0??           00125         btfsc   Flag,0                          ; bit 0 set = pause
00013E EE?? F0??      00126         lfsr    FSR0,BufferPause+.15    ; pause buffer pointer
                      00127 
  0000                00128         variable xx
  00000000            00129 xx=0
                      00130         while xx<.16
000142 968A           00131                 bcf             sdo,ACCESS
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000144 5000           00132                 movf    BitMask,w,ACCESS
000146 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
000148 A4D8               M         btfss   STATUS,Z,ACCESS
00014A 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
00014C 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00014E 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000001            00138 xx+=1
000150 968A           00131                 bcf             sdo,ACCESS
000152 5000           00132                 movf    BitMask,w,ACCESS
000154 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
000156 A4D8               M         btfss   STATUS,Z,ACCESS
000158 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
00015A 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00015C 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000002            00138 xx+=1
00015E 968A           00131                 bcf             sdo,ACCESS
000160 5000           00132                 movf    BitMask,w,ACCESS
000162 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
000164 A4D8               M         btfss   STATUS,Z,ACCESS
000166 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
000168 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00016A 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000003            00138 xx+=1
00016C 968A           00131                 bcf             sdo,ACCESS
00016E 5000           00132                 movf    BitMask,w,ACCESS
000170 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
000172 A4D8               M         btfss   STATUS,Z,ACCESS
000174 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
000176 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000178 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000004            00138 xx+=1
00017A 968A           00131                 bcf             sdo,ACCESS
00017C 5000           00132                 movf    BitMask,w,ACCESS
00017E 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
000180 A4D8               M         btfss   STATUS,Z,ACCESS
000182 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
000184 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000186 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000005            00138 xx+=1
000188 968A           00131                 bcf             sdo,ACCESS
00018A 5000           00132                 movf    BitMask,w,ACCESS
00018C 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00018E A4D8               M         btfss   STATUS,Z,ACCESS
000190 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
000192 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000194 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000006            00138 xx+=1
000196 968A           00131                 bcf             sdo,ACCESS
000198 5000           00132                 movf    BitMask,w,ACCESS
00019A 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
00019C A4D8               M         btfss   STATUS,Z,ACCESS
00019E 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
0001A0 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0001A2 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000007            00138 xx+=1
0001A4 968A           00131                 bcf             sdo,ACCESS
0001A6 5000           00132                 movf    BitMask,w,ACCESS
0001A8 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
0001AA A4D8               M         btfss   STATUS,Z,ACCESS
0001AC 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
0001AE 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0001B0 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000008            00138 xx+=1
0001B2 968A           00131                 bcf             sdo,ACCESS
0001B4 5000           00132                 movf    BitMask,w,ACCESS
0001B6 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
0001B8 A4D8               M         btfss   STATUS,Z,ACCESS
0001BA 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
0001BC 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0001BE 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000009            00138 xx+=1
0001C0 968A           00131                 bcf             sdo,ACCESS
0001C2 5000           00132                 movf    BitMask,w,ACCESS
0001C4 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
0001C6 A4D8               M         btfss   STATUS,Z,ACCESS
0001C8 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
0001CA 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0001CC 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  0000000A            00138 xx+=1
0001CE 968A           00131                 bcf             sdo,ACCESS
0001D0 5000           00132                 movf    BitMask,w,ACCESS
0001D2 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
0001D4 A4D8               M         btfss   STATUS,Z,ACCESS
0001D6 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001D8 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0001DA 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  0000000B            00138 xx+=1
0001DC 968A           00131                 bcf             sdo,ACCESS
0001DE 5000           00132                 movf    BitMask,w,ACCESS
0001E0 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
0001E2 A4D8               M         btfss   STATUS,Z,ACCESS
0001E4 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
0001E6 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0001E8 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  0000000C            00138 xx+=1
0001EA 968A           00131                 bcf             sdo,ACCESS
0001EC 5000           00132                 movf    BitMask,w,ACCESS
0001EE 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
0001F0 A4D8               M         btfss   STATUS,Z,ACCESS
0001F2 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
0001F4 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0001F6 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  0000000D            00138 xx+=1
0001F8 968A           00131                 bcf             sdo,ACCESS
0001FA 5000           00132                 movf    BitMask,w,ACCESS
0001FC 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
0001FE A4D8               M         btfss   STATUS,Z,ACCESS
000200 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
000202 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000204 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  0000000E            00138 xx+=1
000206 968A           00131                 bcf             sdo,ACCESS
000208 5000           00132                 movf    BitMask,w,ACCESS
00020A 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
00020C A4D8               M         btfss   STATUS,Z,ACCESS
00020E 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
000210 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000212 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  0000000F            00138 xx+=1
000214 968A           00131                 bcf             sdo,ACCESS
000216 5000           00132                 movf    BitMask,w,ACCESS
000218 14ED           00133                 andwf   POSTDEC0,w
                      00134                 ifnz
00021A A4D8               M         btfss   STATUS,Z,ACCESS
00021C 868A           00135                 bsf             sdo,ACCESS              ; Transfer "BitMask" state in POSTDEC0 to "sdo" 
                            pin
00021E 928A           00136                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000220 828A           00137                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000010            00138 xx+=1
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00139         endw
                      00140 
                      00141 ; Sets one anode, depended on BitMask
000222 5000           00142         movf    BitMask2,w,access
000224 6E89           00143         movwf   LATA,access
000226 0F02           00144         addlw   .2
                      00145         ifz
000228 B4D8               M         btfsc   STATUS,Z,ACCESS
00022A 8400           00146         bsf             Flag,2,access           ; 150 Hz full scan handshaking flag (should be after las
                            t anode!)
00022C                00147 column.any
                      00148 ;                                                                                                       
                                                                            
                      00149 ;---------------------------------------------------------------------------
                      00150 
                      00151 ; Tests keys in every 8th pass (150 Hz rate)
00022C B000           00152         btfsc   BitMask2,0,access
00022E EF?? F???      00153         goto    no.test.0
                      00154                                                         ; only if BitMask2 = 11111110 (anode 1 on)
                      00155                                         ; *** key 0 test (up)
                      00156         rcf
000232 90D8               M         bcf             STATUS,C,ACCESS
000234 B081           00157         btfsc   keyint,access
                      00158         scf                                                     ; port pin state transferred to Carry
000236 80D8               M         bsf             STATUS,C,ACCESS
000238 3600           00159         rlcf    Rotor0,f,access         ; shift in
00023A 5000           00160         movf    Rotor0,w,access
00023C 0F02           00161         addlw   2                                       ; if Rotor0 = 11111110 (just pressed), W will be
                             0
                      00162         ifz
00023E B4D8               M         btfsc   STATUS,Z,ACCESS
000240 8000           00163         bsf             KeyEdge,0,access        ; if key0 just pressed, set EDGE flag
                      00164                                         ; *** key 1 test (left)
                      00165         rcf
000242 90D8               M         bcf             STATUS,C,ACCESS
000244 BC81           00166         btfsc   keys,access
                      00167         scf                                                     ; port pin state transferred to Carry
000246 80D8               M         bsf             STATUS,C,ACCESS
000248 3600           00168         rlcf    Rotor1,f,access         ; shift in
00024A 5000           00169         movf    Rotor1,w,access
00024C 0F02           00170         addlw   2                                       ; if Rotor1 = 11111110 (just pressed), W will be
                             0
                      00171         ifz
00024E B4D8               M         btfsc   STATUS,Z,ACCESS
000250 8200           00172         bsf             KeyEdge,1,access        ; if key1 just pressed, set EDGE flag
                      00173         ifz
000252 B4D8               M         btfsc   STATUS,Z,ACCESS
000254 9000           00174         bcf             Flag,0,access   ; reset pause flag
000256 D???           00175         bra             no.test.x
000258                00176 no.test.0
                      00177 ;               
000258 B200           00178         btfsc   BitMask2,1,access
00025A EF?? F???      00179         goto    no.test.1
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00180                                                         ; only if BitMask2 = 11111101 (anode 2 on)
                      00181                                         ; *** key 2 test (up)
                      00182         rcf
00025E 90D8               M         bcf             STATUS,C,ACCESS
000260 BC81           00183         btfsc   keys,access
                      00184         scf                                                     ; port pin state transferred to Carry
000262 80D8               M         bsf             STATUS,C,ACCESS
000264 3600           00185         rlcf    Rotor2,f,access         ; shift in
000266 5000           00186         movf    Rotor2,w,access
000268 0F02           00187         addlw   2                                       ; if Rotor2 = 11111110 (just pressed), W will be
                             0
                      00188         ifz
00026A B4D8               M         btfsc   STATUS,Z,ACCESS
00026C 8400           00189         bsf             KeyEdge,2,access        ; if key2 just pressed, set EDGE flag
                      00190         ifz
00026E B4D8               M         btfsc   STATUS,Z,ACCESS
000270 9000           00191         bcf             Flag,0,access   ; reset pause flag
000272 D???           00192         bra             no.test.x
000274                00193 no.test.1
                      00194 ;               
000274 B400           00195         btfsc   BitMask2,2,access
000276 EF?? F???      00196         goto    no.test.2
                      00197                                                         ; only if BitMask2 = 11111011 (anode 3 on)
                      00198                                         ; *** key 3 test (down)
                      00199         rcf
00027A 90D8               M         bcf             STATUS,C,ACCESS
00027C BC81           00200         btfsc   keys,access
                      00201         scf                                                     ; port pin state transferred to Carry
00027E 80D8               M         bsf             STATUS,C,ACCESS
000280 3600           00202         rlcf    Rotor3,f,access         ; shift in
000282 5000           00203         movf    Rotor3,w,access
000284 0F02           00204         addlw   2                                       ; if Rotor2 = 11111110 (just pressed), W will be
                             0
                      00205         ifz
000286 B4D8               M         btfsc   STATUS,Z,ACCESS
000288 8600           00206         bsf             KeyEdge,3,access        ; if key3 just pressed, set EDGE flag
                      00207         ifz
00028A B4D8               M         btfsc   STATUS,Z,ACCESS
00028C 9000           00208         bcf             Flag,0,access   ; reset pause flag
00028E D???           00209         bra             no.test.x
000290                00210 no.test.2
                      00211 ;               
000290 B600           00212         btfsc   BitMask2,3,access
000292 EF?? F???      00213         goto    no.test.x
                      00214                                                         ; only if BitMask2 = 11110111 (anode 4 on)
                      00215                                         ; *** key 4 test (right) and Brightness +/- keys
                      00216         rcf
000296 90D8               M         bcf             STATUS,C,ACCESS
000298 BC81           00217         btfsc   keys,access
                      00218         scf                                                     ; port pin state transferred to Carry
00029A 80D8               M         bsf             STATUS,C,ACCESS
00029C 3600           00219         rlcf    Rotor4,f,access         ; shift in
00029E 5000           00220         movf    Rotor4,w,access
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002A0 0F02           00221         addlw   2                                       ; if Rotor2 = 11111110 (just pressed), W will be
                             0
                      00222         ifz
0002A2 B4D8               M         btfsc   STATUS,Z,ACCESS
0002A4 8800           00223         bsf             KeyEdge,4,access        ; if key4 just pressed, set EDGE flag
                      00224         ifz
0002A6 B4D8               M         btfsc   STATUS,Z,ACCESS
0002A8 9000           00225         bcf             Flag,0,access   ; reset pause flag
                      00226 ;               
                      00227                                         ; *** keys 1+4+2 or 1+4+3 test (brightness +/-)
0002AA B000           00228         btfsc   Rotor1,0,access
0002AC D???           00229         bra             no.test.x                       ; if key LEFT not pressed
0002AE B000           00230         btfsc   Rotor4,0,access
0002B0 D???           00231         bra             no.test.x                       ; if key RIGHT not pressed
                      00232 
0002B2 A400           00233         btfss   KeyEdge,2,access
0002B4 D???           00234         bra             no.bright.up
                      00235                                                                 ; brightness +
0002B6 5000           00236         movf    Brightness,w,access
0002B8 0FF1           00237         addlw   -.15
                      00238         ifnc                                            ; if <15...
0002BA A0D8               M         btfss   STATUS,C,ACCESS
0002BC 2A00           00239         incf    Brightness,f,access     ; ...then inc Brightness
                      00240 
0002BE 6AA9           00241         clrf    EEADR,access            ; *** Brightness je na addr 0
0002C0 C??? FFA8      00242         movff   Brightness,EEDATA       ; *** load data
0002C4 0E04           00243         movlw   b'00000100'                     ; ***
0002C6 6EA6           00244         movwf   EECON1,access           ; *** Allow write to EEPROM
0002C8 0E55           00245         movlw   0x55                            ; ***
0002CA 6EA7           00246         movwf   EECON2,access           ; *** first WR password
0002CC 0EAA           00247         movlw   0xAA                            ; ***
0002CE 6EA7           00248         movwf   EECON2,access           ; *** seconf WR password
0002D0 82A6           00249         bsf             EECON1,WR,access        ; *** WRITE TO EEPROM
                      00250 
0002D2 D???           00251         bra             no.test.14
                      00252 
0002D4                00253 no.bright.up
0002D4 A600           00254         btfss   KeyEdge,3,access
0002D6 D???           00255         bra             no.test.x
                      00256                                                                 ; brightness -
0002D8 5200           00257         movf    Brightness,f,access     ; cp 0
                      00258         ifnz                                            ; if >0...
0002DA A4D8               M         btfss   STATUS,Z,ACCESS
0002DC 0600           00259         decf    Brightness,f,access     ; ...then dec Brightness
                      00260 
0002DE 6AA9           00261         clrf    EEADR,access            ; *** Brightness je na addr 0
0002E0 C??? FFA8      00262         movff   Brightness,EEDATA       ; *** load data
0002E4 0E04           00263         movlw   b'00000100'                     ; ***
0002E6 6EA6           00264         movwf   EECON1,access           ; *** Allow write to EEPROM
0002E8 0E55           00265         movlw   0x55                            ; ***
0002EA 6EA7           00266         movwf   EECON2,access           ; *** first WR password
0002EC 0EAA           00267         movlw   0xAA                            ; ***
0002EE 6EA7           00268         movwf   EECON2,access           ; *** seconf WR password
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002F0 82A6           00269         bsf             EECON1,WR,access        ; *** WRITE TO EEPROM
0002F2                00270 no.test.14
0002F2 6A00           00271         clrf    KeyEdge,access
0002F4                00272 no.test.x
                      00273 ; IF KEY0 (UP) JUST PRESSED, GO PAUSE OR SLEEP MODE
                      00274 
0002F4 BA00           00275         btfsc   Flag,5,access   ; bit 5 set = Only two steps for key 0, without pause
0002F6 D???           00276         bra             pause.mode              ; if pause not allowed, act as if it was pause already
                      00277 
0002F8 B000           00278         btfsc   Flag,0,access           ; pause flag
0002FA D???           00279         bra             pause.mode
                      00280                                         ; NO PAUSE MODE HERE ---                                        
                                                    
0002FC B000           00281         btfsc   KeyEdge,0,access
0002FE 8000           00282         bsf             Flag,0,access                   ; if key 0 just pressed, set pause flag
000300 9000           00283         bcf             KeyEdge,0,access        ; clear KEY0 flag
000302 EF?? F???      00284         goto    no.test                         ; go on
                      00285 
000306                00286 pause.mode                      ; PAUSE MODE HERE ---                                                   
                                            
000306 A000           00287         btfss   KeyEdge,0,access
000308 D???           00288         bra             no.test                         ; if not just test, skip sleeping routine
00030A 9000           00289         bcf             KeyEdge,0,access        ; clear KEY0 flag
00030C 9000           00290         bcf             Flag,0,access           ; clear pause flag
00030E EC?? F???      00291         call    sleeping.time           ; GO SLEEP !!!
                      00292 
                      00293 ; NO SLEEP OR RETURNED FROM SLEEP                                                                       
                                                    
000312                00294 no.test
                      00295 ; RX service                                                                                            
                                                                    
                      00296 
000312 B0??           00297         btfsc   RXFlag,0
000314 D???           00298         bra             rx.enabled                      ; if RX enabled
000316 50AE           00299         movf    RCREG,w,access          ; kill PIR1,RCIF flag
000318 D???           00300         bra             no.rx                           ; if RX disabled
00031A                00301 rx.enabled
00031A AA9E           00302         btfss   PIR1,RCIF,access        ; is RX register empty?
00031C D???           00303         bra             no.rx                           ; if RX register is empty
                      00304                                                                 ; RX register is full
00031E 50AE           00305         movf    RCREG,w,access          ; this resets PIR1,RCIF flag
000320 B200           00306         btfsc   RXFlag,1,access         ; bit 6 set: RX header in progress
000322 D???           00307         bra             header.in.progress
000324 B400           00308         btfsc   RXFlag,2,access         ; bit 3 set: RX in progress
000326 D???           00309         bra             in.progress
                      00310                                                                 ; nothing is in progress, only '[' will 
                            be accepted
000328 0A5B           00311         xorlw   '['
00032A E1??           00312         bnz             rx.exit                         ; it was byte outside verified reception, ignore
                             it
00032C 6A00           00313         clrf    RXserial+0,access
00032E 6A00           00314         clrf    RXserial+1,access
000330 8200           00315         bsf             RXFlag,1,access         ; bit 6 set: RX header in progress (open header receptio
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                            n cycle)
000332 D???           00316         bra             preset.pat                      ; after '['
                      00317 
000334                00318 header.in.progress
000334 0A5D           00319         xorlw   ']'
000336 E0??           00320         bz              rx.ser.terminator       ; "]" is serial number terminator
                      00321 
000338 50AE           00322         movf    RCREG,w,access
00033A 0FD0           00323         addlw   -'0'
00033C 0FF6           00324         addlw   -.10
                      00325         ifc
00033E B0D8               M         btfsc   STATUS,C,ACCESS
000340 6A00           00326         clrf    RXpatience,access       ; byte is not ASCII digit, terminate
000342 E2??           00327         bc              preset.pat                      ; byte is not ASCII digit, terminate
                      00328 
                      00329         serialx2                                        ; *2
                          M         rcf
000344 90D8               M         bcf             STATUS,C,ACCESS
000346 3600               M         rlcf    RXserial+0,f,access
000348 3600               M         rlcf    RXserial+1,f,access
00034A E2??               M         bc              preset.pat                      ; number overflow, ignore it
00034C C??? F???      00330         movff   RXserial+0,InnerInt
000350 C??? F???      00331         movff   RXserial+1,OuterInt
                      00332         serialx2                                        ; *4
                          M         rcf
000354 90D8               M         bcf             STATUS,C,ACCESS
000356 3600               M         rlcf    RXserial+0,f,access
000358 3600               M         rlcf    RXserial+1,f,access
00035A E2??               M         bc              preset.pat                      ; number overflow, ignore it
                      00333         serialx2                                        ; *8
                          M         rcf
00035C 90D8               M         bcf             STATUS,C,ACCESS
00035E 3600               M         rlcf    RXserial+0,f,access
000360 3600               M         rlcf    RXserial+1,f,access
000362 E2??               M         bc              preset.pat                      ; number overflow, ignore it
000364 5000           00334         movf    InnerInt,w,access
000366 2600           00335         addwf   RXserial+0,f,access
000368 5000           00336         movf    OuterInt,w,access
00036A 2200           00337         addwfc  RXserial+1,f,access     ; *10
                      00338 
00036C 50AE           00339         movf    RCREG,w,access
00036E 0B0F           00340         andlw   0x0f                            ; convert ascii digit to binary
000370 2600           00341         addwf   RXserial+0,f,access     ; *10 + received byte
                      00342         ifc
000372 B0D8               M         btfsc   STATUS,C,ACCESS
000374 2A00           00343         incf    RXserial+1,f,access
000376 D???           00344         bra             preset.pat                      ; after one digit
                      00345 
000378                00346 rx.ser.terminator
000378 9200           00347         bcf             RXFlag,1,access         ; bit 6 clr: terminate RX header progress
00037A 9400           00348         bcf             RXFlag,2,access         ; bit 3 clr: default RX not in progress
                      00349 
00037C 6AA9           00350         clrf    EEADR,access            ; ***
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00351 
00037E 5000           00352         movf    RXserial+0,w,access
000380 1800           00353         xorwf   MYserial+0,w,access
000382 E1??           00354         bnz             preset.pat                      ; serial number doesn't match
000384 5000           00355         movf    RXserial+1,w,access
000386 1800           00356         xorwf   MYserial+1,w,access
000388 E1??           00357         bnz             preset.pat                      ; serial number doesn't match
                      00358 
00038A 6A00           00359         clrf    RXptr,access            ; clr RX pointer
00038C 8400           00360         bsf             RXFlag,2,access         ; bit 3 set: RX in progress (open RX cycle)
00038E D???           00361         bra             preset.pat                      ; after serial number recognized
                      00362 
000390                00363 in.progress
000390 2A00           00364         incf    Received,f,access
000392 E0??           00365         bz              RXbuf.ovf
                      00366 
000394 EE06 F000      00367         lfsr    FSR0,0x600
000398 C??? FFE9      00368         movff   RXptr,FSR0L                     ; load FSR0 with RX buffer pointer
00039C 2A00           00369         incf    RXptr,f,access          ; RXptr ready for next byte
00039E CFAE FFEE      00370         movff   RCREG,POSTINC0          ; WRITE TO RAM
0003A2 6AEF           00371         clrf    INDF0                           ; put 0x00 terminator
                      00372 
0003A4 2AA9           00373         incf    EEADR,f,access          ; *** adv addr (1...255)
0003A6 28A9           00374         incf    EEADR,w,access          ; *** test if EEADR=255 (keep at least 1 by for terminator)
0003A8 E0??           00375         bz              preset.pat                      ; *** if overflow (>254 chars)  
0003AA CFAE FFA8      00376         movff   RCREG,EEDATA            ; *** load data
0003AE 0E04           00377         movlw   b'00000100'                     ; ***
0003B0 6EA6           00378         movwf   EECON1,access           ; *** Allow write to EEPROM
0003B2 0E55           00379         movlw   0x55                            ; ***
0003B4 6EA7           00380         movwf   EECON2,access           ; *** first WR password
0003B6 0EAA           00381         movlw   0xAA                            ; ***
0003B8 6EA7           00382         movwf   EECON2,access           ; *** seconf WR password
0003BA 82A6           00383         bsf             EECON1,WR,access        ; *** WRITE TO EEPROM
0003BC                00384 preset.pat
0003BC 0EF0           00385         movlw   .240
0003BE 6E00           00386         movwf   RXpatience,access       ; preset patience to 200 ms
0003C0 D???           00387         bra             rx.exit
0003C2                00388 RXbuf.ovf
0003C2 0600           00389         decf    Received,f,access       ; restore Received max
0003C4                00390 no.rx
0003C4 5200           00391         movf    RXpatience,f,access
0003C6 E1??           00392         bnz             still.rxpat
                      00393 
0003C8 94A6           00394         bcf             EECON1,WREN,access      ; *** disable further eeprom writes
0003CA 9400           00395         bcf             RXFlag,2,access         ; bit 3 clr: terminate RX progress
0003CC 9200           00396         bcf             RXFlag,1,access         ; bit 6 clr: terminate RX header progress
0003CE 6A00           00397         clrf    RXptr,access            ; clr RX pointer
0003D0 D???           00398         bra             rx.exit
0003D2                00399 still.rxpat
0003D2 0600           00400         decf    RXpatience,f,access
0003D4 E1??           00401         bnz             rx.exit
0003D6 8C00           00402         bsf             Flag,6,access           ; bit 6 set = Display message received
0003D8 2AA9           00403         incf    EEADR,f,access          ; *** adv addr (1...255)
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003DA 6AA8           00404         clrf    EEDATA,access           ; *** load terminator (0)
0003DC 0E55           00405         movlw   0x55                            ; ***
0003DE 6EA7           00406         movwf   EECON2,access           ; *** first WR password
0003E0 0EAA           00407         movlw   0xAA                            ; ***
0003E2 6EA7           00408         movwf   EECON2,access           ; *** seconf WR password
0003E4 82A6           00409         bsf             EECON1,WR,access        ; *** WRITE TO EEPROM
0003E6 94A6           00410         bcf             EECON1,WREN,access      ; *** disable further eeprom writes
0003E8                00411 rx.exit
                      00412 
                      00413 ; Exit interrupt routine                                                                                
                                                            
0003E8 C??? FFE9      00414         movff   FSR0temp+0,FSR0L                ; restore FSR0
0003EC C??? FFEA      00415         movff   FSR0temp+1,FSR0H                ; restore FSR0
0003F0                00416 exit2
0003F0 8200           00417         bsf             Flag,1,access                   ; 150x8 Hz handshaking flag
0003F2 94F2           00418         bcf             INTCON,TMR0IF,access
0003F4 0011           00419         retfie  FAST
                      00420 ;       
0003F6                00421 it.was.int0
0003F6 92F2           00422         bcf             INTCON,INT0IF,access    ; reset INT0IF flag also, to avoid int retrigering
0003F8 0011           00423         retfie  FAST
                      00424 
                      00425 ;***********************************************************************************
                      00426 ;       Puts all hardware in low power mode, enables wake up on INT0, and sleeps                
                      00427 ;       On INT0 reenables all hardware drivers and resumes                                              
                                            
                      00428 ;***********************************************************************************
                      00429 
0003FA                00430 sleeping.time
                      00431 ; all drivers off                                                                                       
                                                                    
0003FA 6889           00432         setf    LATA,access
0003FC 8A8A           00433         bsf             vdd,access                              ; disable shift reg voltage supply
                      00434 ; wait for 200 ms keyint = off                                                                          
                                                    
0003FE 0E07           00435         movlw   .7                                      ; initialize 400 ms timing
000400 EC?? F???      00436         call    wait.keyint.released    ; now it is released for sure (400 ms)
000404 92F2           00437         bcf             INTCON,INT0IF,access    ; reset INT0IF flag also, to avoid false wake up
000406 88F2           00438         bsf             INTCON,INT0IE,access    ; enable INT0IE (but not GIE!) to wake up from sleep
000408 9AF2           00439         bcf             INTCON,TMR0IE,access    ; disable Timer 0 interrupt
                      00440 ; sleep                                                                                                 
                                                                            
00040A 0003           00441         sleep                                   ; Zzzzzzzz... Rrrrrrrrrr... AHRRRrrrr... Zzzzzzzz...
                      00442 ; wake up                                                                                               
                                                                            
00040C 0000           00443         nop
00040E 98F2           00444         bcf             INTCON,INT0IE,access    ; disable INT0IE
000410 9A8A           00445         bcf             vdd,access                              ; reenable shift reg voltage supply
000412 92F2           00446         bcf             INTCON,INT0IF,access    ; reset INT0IF flag, to avoid int retrigering
000414 8AF2           00447         bsf             INTCON,TMR0IE,access    ; reenable Timer 0 interrupt
                      00448 ; wait for 50 ms keyint = off                                                                           
                                                    
000416 0E02           00449         movlw   .2                                      ; initialize 50 ms timing
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000418                00450 wait.keyint.released
000418 6E00           00451         movwf   OutPlusInt,access
00041A 6A00           00452         clrf    InnerInt,access
00041C 6A00           00453         clrf    OuterInt,access
00041E                00454 debounce.off
00041E A081           00455         btfss   keyint,access
000420 D???           00456         bra             wait.keyint.released            ; because it is still on
000422 2E00           00457         decfsz  InnerInt,f,access
000424 D???           00458         bra             debounce.off
000426 2E00           00459         decfsz  OuterInt,f,access
000428 D???           00460         bra             debounce.off
00042A 2E00           00461         decfsz  OutPlusInt,f,access
00042C D???           00462         bra             debounce.off
                      00463                                                                         ; now it is released for sure
00042E 0012           00464         return
                      00465 
                      00466 ;                                                                                                       
                                                    
                      00467 
                      00468                                         ; Brightness linearization table
  00000003            00469 bright0         equ             .3
  00000004            00470 bright1         equ             .4
  00000005            00471 bright2         equ             .5
  00000006            00472 bright3         equ             .6
  00000008            00473 bright4         equ             .8
  0000000A            00474 bright5         equ             .10
  0000000C            00475 bright6         equ             .12
  0000000F            00476 bright7         equ             .15
  00000013            00477 bright8         equ             .19
  00000018            00478 bright9         equ             .24
  0000001E            00479 bright10        equ             .30
  00000025            00480 bright11        equ             .37
  0000002D            00481 bright12        equ             .45
  00000036            00482 bright13        equ             .54
  00000041            00483 bright14        equ             .65
  0000004D            00484 bright15        equ             .77
                      00485 
000430                00486 bright.tab
000430 B5FD           00487         db      .256-bright0, .256-(.78-bright0)
000432 B6FC           00488         db      .256-bright1, .256-(.78-bright1)
000434 B7FB           00489         db      .256-bright2, .256-(.78-bright2)
000436 B8FA           00490         db      .256-bright3, .256-(.78-bright3)
000438 BAF8           00491         db      .256-bright4, .256-(.78-bright4)
00043A BCF6           00492         db      .256-bright5, .256-(.78-bright5)
00043C BEF4           00493         db      .256-bright6, .256-(.78-bright6)
00043E C1F1           00494         db      .256-bright7, .256-(.78-bright7)
000440 C5ED           00495         db      .256-bright8, .256-(.78-bright8)
000442 CAE8           00496         db      .256-bright9, .256-(.78-bright9)
000444 D0E2           00497         db      .256-bright10,.256-(.78-bright10)
000446 D7DB           00498         db      .256-bright11,.256-(.78-bright11)
000448 DFD3           00499         db      .256-bright12,.256-(.78-bright12)
00044A E8CA           00500         db      .256-bright13,.256-(.78-bright13)
00044C F3BF           00501         db      .256-bright14,.256-(.78-bright14)
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00044E FFB3           00502         db      .256-bright15,.256-(.78-bright15)
                      00503 
                      00504 
                      00169 
                      00170 ;*******************************************************************************
                      00171 ;                                                       M A I N                                         
                                                                            
                      00172 ;*******************************************************************************
                      00173 
000450                00174 main
                      00175 ;                                                               INTERNAL OSCILLATOR
000450 0E7C           00176         movlw   b'01111100'             ; Sleep mode on SLEEP instr, 16 MHz internal osc
000452 6ED3           00177         movwf   OSCCON,access
000454 0E13           00178         movlw   b'00010011'
000456 6ED2           00179         movwf   OSCCON2,access
                      00180 
                      00181 ;                                                               PORTS
                      00182 
000458 010F           00183         banksel ANSELA                  ; banked SFR page
00045A 6B5B           00184         clrf    ANSELA,banked   ; all inputs digital
00045C 6B5C           00185         clrf    ANSELB,banked   ; all inputs digital
00045E 0E04           00186         movlw   b'00000100'
000460 6F5D           00187         movwf   ANSELC,banked   ; all inputs digital except C2 (AN14)
000462 0100           00188         banksel 0                               ; banked page 0
                      00189 
000464 0E00           00190         movlw   b'00000000'             ; pull-ups enabled, int0 on falling edge of PORTB,0
000466 6EF1           00191         movwf   INTCON2,access
000468 0E40           00192         movlw   b'01000000'
00046A 6E85           00193         movwf   WPUB,access             ; PORTB,6 PULL UP ENABLED
                      00194 
00046C 0EFF           00195         movlw   b'11111111'
00046E 6E89           00196         movwf   LATA,access
000470 0E20           00197         movlw   b'00100000'
000472 6E8A           00198         movwf   LATB,access
000474 0E04           00199         movlw   b'00000100'
000476 6E8B           00200         movwf   LATC,access
                      00201 
000478 0E00           00202         movlw   b'00000000'             ; RA all outputs except USBV and EXTRA LED
00047A 6E92           00203         movwf   TRISA,access
00047C 0E41           00204         movlw   b'01000001'             ; RB all outputs except keys
00047E 6E93           00205         movwf   TRISB,access
000480 0EB9           00206         movlw   b'10111001'             ; RC all outputs
000482 6E94           00207         movwf   TRISC,access
                      00208 
                      00209 ; ----------------------- timer0
000484 0EC6           00210         movlw   b'11000110'             ; T0 on, 8 bit, prescaler=128
000486 6ED5           00211         movwf   T0CON,access
000488 0E4E           00212         movlw   .78                             ; int on  78*128t = 9984T  (1202 Hz)
00048A 6E00           00213         movwf   T0period,access
                      00214 
                      00215 ; ----------------------- timer2 and PWM2
00048C 0E05           00216         movlw   b'00000101'             ; T2 on, prescaler 1:4, no postscaler
00048E 6EBA           00217         movwf   T2CON,access
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000490 0E4A           00218         movlw   .75-1                   ; 12MHz/(4*75) = 40KHz carrier
000492 6EBB           00219         movwf   PR2,access
                      00220 
000494 0E0C           00221         movlw   b'00001100'             ; PWM mode
000496 6E97           00222         movwf   CCP2CON,access
000498 0E26           00223         movlw   b'00100110'             ; period = .38
00049A 6E90           00224         movwf   CCPR2L,access
00049C 6A91           00225         clrf    CCPR2H,access
                      00226 
                      00227 ; ----------------------- UART
00049E 0E20           00228         movlw   b'00100000'
0004A0 6EAC           00229         movwf   TXSTA1,access   ; reg TXREG, BRGH=0
0004A2 0E90           00230         movlw   b'10010000'
0004A4 6EAB           00231         movwf   RCSTA1,access   ; reg RCREG
0004A6 0E18           00232         movlw   b'00011000'
0004A8 6EB8           00233         movwf   BAUDCON1,access ; TX inverted, brg16=1
0004AA 0E13           00234         movlw   high .5000
0004AC 6EB0           00235         movwf   SPBRGH1,access  ; 600 baud
0004AE 0E88           00236         movlw   low .5000
0004B0 6EAF           00237         movwf   SPBRG1,access   ; 600 baud
                      00238 
                      00239 ;-------------------------------- initialization over
                      00240 
0004B2 9A8A           00241         bcf             vdd,access                              ; enable shift reg voltage supply
                      00242 
0004B4 EE00 F001      00243         lfsr    FSR0,1                  ; Brightness is skipped, that's why it is at addr 0
0004B8                00244 goclr1
0004B8 18EF           00245         xorwf   INDF0,w,access  ; uses 0x000-0x1FF for randomization and clears banks
0004BA 6AEE           00246         clrf    POSTINC0                ; clears ram banks 0 and 1
0004BC A2EA           00247         btfss   FSR0H,1,access
0004BE D???           00248         bra             goclr1
0004C0 6E00           00249         movwf   Ma0,access              ; randomizes seed 0
0004C2                00250 goclr2
0004C2 18EF           00251         xorwf   INDF0,w,access  ; uses 0x200-0x3FF for randomization and clears banks
0004C4 6AEE           00252         clrf    POSTINC0                ; clears ram banks 2 and 3
0004C6 B2EA           00253         btfsc   FSR0H,1,access
0004C8 D???           00254         bra             goclr2
0004CA 6E00           00255         movwf   Ma1,access              ; randomizes seed 1
0004CC                00256 goclr3
0004CC 18EF           00257         xorwf   INDF0,w,access  ; uses 0x400-0x5FF for randomization and clears banks
0004CE 6AEE           00258         clrf    POSTINC0                ; clears ram banks 4 and 5
0004D0 A2EA           00259         btfss   FSR0H,1,access
0004D2 D???           00260         bra             goclr3
0004D4 6E00           00261         movwf   Ma2,access              ; randomizes seed 2
0004D6                00262 goclr4
0004D6 18EF           00263         xorwf   INDF0,w,access  ; uses 0x600-0x7FF for randomization and clears banks
0004D8 6AEE           00264         clrf    POSTINC0                ; clears ram banks 6 and 7
0004DA B2EA           00265         btfsc   FSR0H,1,access
0004DC D???           00266         bra             goclr4
0004DE 6E00           00267         movwf   Ma3,access              ; randomizes seed 3
                      00268 
0004E0 010?           00269         banksel Buffer                  ; all banked modes will address bank 7
0004E2 6AF8           00270         clrf    TBLPTRU,access
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004E4 8A00           00271         bsf             Flag,5,access   ; bit 5 set = Only two steps for key 0, without pause
                      00272 
0004E6 0E08           00273         movlw   .8
0004E8 6E00           00274         movwf   Brightness,access       ; Brightness initialized
                      00275 
                      00276 ;                                                       serial number start                             
                                                            
                      00277                 if Offset == 0
0004EA 0E0E           00278         movlw   0x0E                            ; serial number defined in kernel
0004EC 6EF6           00279         movwf   TBLPTRL,access
0004EE 6AF7           00280         clrf    TBLPTRH,access
0004F0 0009           00281         tblrd*+
0004F2 CFF5 F???      00282         movff   TABLAT,MYserial+0       ; lo byte
0004F6 0008           00283         tblrd*
0004F8 CFF5 F???      00284         movff   TABLAT,MYserial+1       ; hi byte
                      00285                 else
                      00286         movlw   low (Offset+0x000E)             ; serial number defined in kernel
                      00287         movwf   TBLPTRL,access
                      00288         movlw   high (Offset+0x000E)    ; serial number defined in kernel
                      00289         movwf   TBLPTRH,access
                      00290         tblrd*+
                      00291         movff   TABLAT,MYserial+0       ; lo byte
                      00292         tblrd*-
                      00293         movf    MYserial+0,w,access
                      00294         iorwf   TABLAT,w,access
                      00295         bz              get.from.boot                   ; if serial number defined in kernel is 0x0000
                      00296         movf    MYserial+0,w,access
                      00297         andwf   TABLAT,w,access
                      00298         addlw   1
                      00299         bnz             get.hi                                  ; if serial number defined in kernel is 
                            not 0xFFFF
                      00300 get.from.boot
                      00301         movlw   0x0E                            ; serial number defined in bootloader
                      00302         movwf   TBLPTRL,access
                      00303         clrf    TBLPTRH,access
                      00304         tblrd*+
                      00305         movff   TABLAT,MYserial+0       ; lo byte
                      00306         tblrd*
                      00307 get.hi
                      00308         movff   TABLAT,MYserial+1       ; hi byte
                      00309                 endif
                      00310 ;                                                               EEPROM read                             
                                                                    
                      00311 
0004FC 6AA6           00312         clrf    EECON1,access           ; Disable write to EEPROM
0004FE 68A9           00313         setf    EEADR,access            ; EEADR = -1
                      00314 
000500 EC?? F???      00315         call    ee.rd                           ; read addr 0 (Brightness)
000504 0B0F           00316         andlw   0x0F
000506 6E00           00317         movwf   Brightness,access
                      00318                                                 ; load display text
000508 EE06 F000      00319         lfsr    FSR0,0x600                      ; Display buffer
00050C EC?? F???      00320         call    ee.rd                           ; read first byte only from EE addr 1
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000510 6EEE           00321         movwf   POSTINC0,access
                      00322 
000512 0F00           00323         addlw   0
000514 E0??           00324         bz              def.txt                         ; if first char = terminator, go load def text
000516 0F01           00325         addlw   1
000518 E0??           00326         bz              def.txt                         ; if first char = 0xFF (empty EE), go load def t
                            ext
                      00327 
00051A 0EFE           00328         movlw   .254                            ; one was read, 254 more left
00051C 6E00           00329         movwf   BitMask,access          ; temporarily borrowed register
00051E                00330 go.rd.ee
00051E EC?? F???      00331         call    ee.rd
000522 6EEE           00332         movwf   POSTINC0,access
000524 2E00           00333         decfsz  BitMask,f,access
000526 D???           00334         bra             go.rd.ee
000528 D???           00335         bra             exit.ee
                      00336                                                 ; load default text from rom
00052A                00337 def.txt
00052A EE06 F000      00338         lfsr    FSR0,0x600                      ; initialize dest
00052E 0E??           00339         movlw   low greeting
000530 6EF6           00340         movwf   TBLPTRL,access          ; initialize src
000532 0E??           00341         movlw   high greeting
000534 6EF7           00342         movwf   TBLPTRH,access          ; initialize src
000536                00343 transfer.greeting
000536 0009           00344         tblrd*+                                         ; read ACSII byte from ROM
000538 50F5           00345         movf    TABLAT,w,access
00053A 6EEE           00346         movwf   POSTINC0
00053C E1??           00347         bnz             transfer.greeting
00053E                00348 exit.ee                                                 ; message terminator 0 found
                      00349 
                      00350 ;                                                                                                       
                                                                            
                      00351 
00053E EC?? F???      00352         call    disp.detect                     ; auto detect display type (affects Flag,7)
                      00353 
000542 0EE0           00354         movlw   b'11100000'             ; enable INTERRUPTS, enable timer0 int
000544 6EF2           00355         movwf   INTCON,access
000546 EF?? F???      00356         goto    cont
                      00357 
                      00358 ;***********************************************************************************;
                      00359 ;***********************************************************************************;
00054A                00360 ee.rd
00054A 2AA9           00361         incf    EEADR,f,access          ; *** adv addr (1...255)
00054C 80A6           00362         bsf             EECON1,RD,access        ; initiate READ
00054E 50A8           00363         movf    EEDATA,w,access         ; read data
000550 0012           00364         return
                      00365 
                      00366 ;***********************************************************************************;
000552                00367 disp.detect
000552 0E7F           00368         movlw   0x7F
000554 6E89           00369         movwf   LATA                    ; switch on anode 7 only
000556 0E39           00370         movlw   b'00111001'             ; AN14, enable ADC
000558 6EC2           00371         movwf   ADCON0,access
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00055A 0E00           00372         movlw   b'00000000'             ; Vref+ to AVdd, Vref- to AVss
00055C 6EC1           00373         movwf   ADCON1,access
00055E 0E3E           00374         movlw   b'00111110'             ; Left just, 20 Tad, FOSC/64
000560 6EC0           00375         movwf   ADCON2,access
                      00376 
000562 968A           00377                 bcf             sdo,ACCESS              ; serial data low (shift reg outputs 2...15 off)
  0000                00378         variable xx
  00000000            00379 xx=0
                      00380         while xx<.15
000564 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000566 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000001            00383 xx+=1
000568 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00056A 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000002            00383 xx+=1
00056C 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00056E 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000003            00383 xx+=1
000570 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000572 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000004            00383 xx+=1
000574 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000576 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000005            00383 xx+=1
000578 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00057A 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000006            00383 xx+=1
00057C 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00057E 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000007            00383 xx+=1
000580 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000582 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000008            00383 xx+=1
000584 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000586 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  00000009            00383 xx+=1
000588 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00058A 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  0000000A            00383 xx+=1
00058C 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00058E 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  0000000B            00383 xx+=1
000590 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000592 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  0000000C            00383 xx+=1
000594 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
000596 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  0000000D            00383 xx+=1
000598 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00059A 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
  0000000E            00383 xx+=1
00059C 928A           00381                 bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
00059E 828A           00382                 bsf             clk,ACCESS              ; ___/^^^       shift out one bit
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000000F            00383 xx+=1
                      00384         endw
                      00385 
0005A0 868A           00386         bsf             sdo,ACCESS              ; serial data high (shift reg output 1 on)
0005A2 928A           00387         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0005A4 828A           00388         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00389 
0005A6 EC?? F???      00390         call    ad.convert              ; first ADC
0005AA 6E00           00391         movwf   BitMask,access  ; temporarily borrowed register
                      00392 
0005AC 968A           00393         bcf             sdo,ACCESS              ; serial data low (shift reg output 1 off,output 2 on)
0005AE 928A           00394         bcf             clk,ACCESS              ; ^^^\___       generate "clk" pulse
0005B0 828A           00395         bsf             clk,ACCESS              ; ___/^^^       shift out one bit
                      00396 
0005B2 EC?? F???      00397         call    ad.convert              ; second ADC
                      00398 
0005B6 6889           00399         setf    LATA,access             ; switch off all anodes
0005B8 90C2           00400         bcf             ADCON0,access   ; disable ADC
                      00401 
0005BA 5C00           00402         subwf   BitMask,w,access        ; conv1-conv2
                      00403         ifnc
0005BC A0D8               M         btfss   STATUS,C,ACCESS
0005BE 8E00           00404         bsf             Flag,7,access   ; set column cathode flag if conv2>conv1
0005C0 0012           00405         return
                      00406 
0005C2                00407 ad.convert
0005C2 82C2           00408         bsf             ADCON0,GO,access        ; start conv
0005C4                00409 wait.conv
0005C4 B2C2           00410         btfsc   ADCON0,GO,access        ; test ready/bysy flag
0005C6 D???           00411         bra             wait.conv
0005C8 50C4           00412         movf    ADRESH,w,access         ; read 8-bit result to W
0005CA 0012           00413         return
                      00414 
                      00415 ;***********************************************************************************;
0005CC                00416 tx.ascnum
0005CC 0B0F           00417         andlw   0x0f                    ; isolate digit
0005CE 0930           00418         iorlw   0x30
0005D0                00419 tx.byte
0005D0 A2AC           00420         btfss   TXSTA,TRMT
0005D2 D???           00421         bra             tx.byte         ; jer tx reg full
0005D4 6EAD           00422         movwf   TXREG
0005D6 0012           00423         return
                      00424 
                      00425 ;***********************************************************************************;
                      00426 ;   32-bit pseudorandom generator                                                                       
                                                            ;
                      00427 ;   every time it is envoked, it performs SEED * 0x41c64e6d + 0x00006073 ---> SEED      ;
                      00428 ;   At the end, it performs  Ma0 xor Ma1 plus Ma2 xor Ma3 xor TMR2 ---> w                       ;
                      00429 ;   where: Ma0 = lowest byte of SEED, Ma3 = highest byte                                                
                                    ;
                      00430 ;   input:  Ma0,Ma1,Ma2,Ma3 (which is SEED), output: w, trashes: Mc0,Mc1,Mc2,Mc3        ;
                      00431 ;   Execution time:  80T including call/ret                                                             
                                                    ;
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00432 ;***********************************************************************************;
0005D8                00433 rnd
                      00434 ;       A3 A2 A1 A0 * 41 c6 4e 6d = C3 C2 C1 C0 
                      00435 
0005D8 5000           00436         movf    Ma0,w,access            ; a0
0005DA 0D6D           00437         mullw   0x6d                            ; b0
0005DC CFF3 F???      00438         movff   PRODL,Mc0
0005E0 CFF4 F???      00439         movff   PRODH,Mc1                       ; 1
                      00440 
0005E4 5000           00441         movf    Ma0,w,access            ; a0
0005E6 0D4E           00442         mullw   0x4e                            ; b1
0005E8 50F3           00443         movf    PRODL,w,access
0005EA 2600           00444         addwf   Mc1,f,access            ; +lo
                      00445         ifc
0005EC B0D8               M         btfsc   STATUS,C,ACCESS
0005EE 2AF4           00446         incf    PRODH,f,access          ; c
0005F0 CFF4 F???      00447         movff   PRODH,Mc2                       ; 2
                      00448 
0005F4 5000           00449         movf    Ma1,w,access            ; a1
0005F6 0D6D           00450         mullw   0x6d                            ; b0
0005F8 50F3           00451         movf    PRODL,w,access
0005FA 2600           00452         addwf   Mc1,f,access            ; +lo
0005FC 50F4           00453         movf    PRODH,w,access
0005FE 2000           00454         addwfc  Mc2,w,access            ; +hi c
000600 6A00           00455         clrf    Mc3,access
                      00456         ifc
000602 B0D8               M         btfsc   STATUS,C,ACCESS
000604 2A00           00457         incf    Mc3,f,access            ; c
000606 6E00           00458         movwf   Mc2,access                      ; 3
                      00459 
000608 5000           00460         movf    Ma0,w,access            ; a0
00060A 0DC6           00461         mullw   0xc6                            ; b2
00060C 50F3           00462         movf    PRODL,w,access
00060E 2600           00463         addwf   Mc2,f,access            ; +lo
000610 50F4           00464         movf    PRODH,w,access
000612 2200           00465         addwfc  Mc3,f,access            ; +hi c   4
                      00466 
000614 5000           00467         movf    Ma2,w,access            ; a2
000616 0D6D           00468         mullw   0x6d                            ; b0
000618 50F3           00469         movf    PRODL,w,access
00061A 2600           00470         addwf   Mc2,f,access            ; +lo
00061C 50F4           00471         movf    PRODH,w,access
00061E 2200           00472         addwfc  Mc3,f,access            ; +hi c   5
                      00473 
000620 5000           00474         movf    Ma1,w,access            ; a1
000622 0D4E           00475         mullw   0x4e                            ; b1
000624 50F3           00476         movf    PRODL,w,access
000626 2600           00477         addwf   Mc2,f,access            ; +lo
000628 50F4           00478         movf    PRODH,w,access
00062A 2200           00479         addwfc  Mc3,f,access            ; +hi c   6
                      00480 
00062C 5000           00481         movf    Ma0,w,access            ; a0
00062E 0D41           00482         mullw   0x41                            ; b3
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000630 50F3           00483         movf    PRODL,w,access
000632 2600           00484         addwf   Mc3,f,access            ; +lo     7
                      00485 
000634 5000           00486         movf    Ma3,w,access            ; a0
000636 0D6D           00487         mullw   0x6d                            ; b0
000638 50F3           00488         movf    PRODL,w,access
00063A 2600           00489         addwf   Mc3,f,access            ; +lo     8
                      00490 
00063C 5000           00491         movf    Ma1,w,access            ; a0
00063E 0DC6           00492         mullw   0xc6                            ; b2
000640 50F3           00493         movf    PRODL,w,access
000642 2600           00494         addwf   Mc3,f,access            ; +lo     9
                      00495 
000644 5000           00496         movf    Ma2,w,access            ; a0
000646 0D4E           00497         mullw   0x4e                            ; b1
000648 50F3           00498         movf    PRODL,w,access
00064A 2600           00499         addwf   Mc3,f,access            ; +lo     10
                      00500 
                      00501 ;                  |      A0 B0    1
                      00502 ;                  |   A0 B1       2
                      00503 ;                  |   A1 B0       3
                      00504 ;                  |A0 B2          4
                      00505 ;                  |A2 B0          5
                      00506 ;                  |A1 B1          6
                      00507 ;               |A0 B3             7
                      00508 ;               |A3 B0             8
                      00509 ;               |A1 B2             9
                      00510 ;               |A2 B1             10
                      00511 
                      00512 ;       C3 C2 C1 C0 + 00 00 60 73 = A3 A2 A1 A0 
                      00513 
00064C 6A00           00514         clrf    Ma3,access
00064E 6A00           00515         clrf    Ma2,access
000650 0E60           00516         movlw   0x60
000652 6E00           00517         movwf   Ma1,access
000654 0E73           00518         movlw   0x73
000656 6E00           00519         movwf   Ma0,access
                      00520 
000658 5000           00521         movf    Mc0,w,access
00065A 2600           00522         addwf   Ma0,f,access
                      00523 
00065C 5000           00524         movf    Mc1,w,access
00065E 2200           00525         addwfc  Ma1,f,access
                      00526 
000660 5000           00527         movf    Mc2,w,access
000662 2200           00528         addwfc  Ma2,f,access
                      00529 
000664 5000           00530         movf    Mc3,w,access
000666 2200           00531         addwfc  Ma3,f,access
                      00532 
000668 5000           00533         movf    Ma0,w,access    ; extra:  Ma0 ^ Ma1 + Ma2 ^ Ma3 ---> w
00066A 1800           00534         xorwf   Ma1,w,access
00066C 2400           00535         addwf   Ma2,w,access
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00066E 1800           00536         xorwf   Ma3,w,access
000670 18BC           00537         xorwf   TMR2,w,access   ; 8-bit output: w
                      00538 
000672 0012           00539         return
                      00540 
                      00541 ;                                                                                                       
                                                                                            
000674                00542 greeting
                      00543 
000674 683C 573E 6C65 00544  db "<h>Welcome to<H> Hackaday Belgrade<h> conference    "
       6F63 656D 7420 
       3C6F 3E48 4820 
       6361 616B 6164 
       2079 6542 676C 
       6172 6564 683C 
       203E 6F63 666E 
       7265 6E65 6563 
       2020 2020 
0006A8 493C 483E 693C 00545  db     "<I>H<i> <I>A<i> <I>C<i> <I>K<i> <I>A<i> <I>D<i> <I>A<i> <I>Y<I> "
       203E 493C 413E 
       693C 203E 493C 
       433E 693C 203E 
       493C 4B3E 693C 
       203E 493C 413E 
       693C 203E 493C 
       443E 693C 203E 
       493C 413E 693C 
       203E 493C 593E 
       493C 203E 
0006E8 763C 573E 6C65 00546  db "<v>Welcome to<V> Hackaday Belgrade<v> conference    "
       6F63 656D 7420 
       3C6F 3E56 4820 
       6361 616B 6164 
       2079 6542 676C 
       6172 6564 763C 
       203E 6F63 666E 
       7265 6E65 6563 
       2020 2020 
00071C 493C 483E 693C 00547  db     "<I>H<i> <I>A<i> <I>C<i> <I>K<i> <I>A<i> <I>D<i> <I>A<i> <I>Y<I> "
       203E 493C 413E 
       693C 203E 493C 
       433E 693C 203E 
       493C 4B3E 693C 
       203E 493C 413E 
       693C 203E 493C 
       443E 693C 203E 
       493C 413E 693C 
       203E 493C 593E 
       493C 203E 
                      00548 
                      00549 ; db "ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz 01234567890 !@#$%^&*()_+-= \':[]{},./<>?",0x
                            32,0x3b,0
                      00550 
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00551 ;                                                                                                       
                                                                                            
00075C                00552 cont
                      00553 
                      00554         END
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 32


SYMBOL TABLE
  LABEL                             VALUE 

A                                 00000000
ABDEN                             00000000
ABDOVF                            00000007
ACCESS                            00000000
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACKTIM                            00000007
ACQT0                             00000003
ACQT1                             00000004
ACQT2                             00000005
ACTCON                            00000FB5
ACTD                              00000006
ACTEN                             00000007
ACTIE                             00000007
ACTIF                             00000007
ACTIP                             00000007
ACTLOCK                           00000003
ACTMD                             00000004
ACTOR                             00000001
ACTORS                            00000001
ACTSEL                            00000007
ACTSRC                            00000004
ACTUD                             00000006
ACTVIE                            00000002
ACTVIF                            00000002
ADCMD                             00000002
ADCON0                            00000FC2
ADCON1                            00000FC1
ADCON2                            00000FC0
ADCS0                             00000000
ADCS1                             00000001
ADCS2                             00000002
ADDEN                             00000003
ADDR0                             00000000
ADDR1                             00000001
ADDR2                             00000002
ADDR3                             00000003
ADDR4                             00000004
ADDR5                             00000005
ADDR6                             00000006
ADEN                              00000003
ADFM                              00000007
ADIE                              00000006
ADIF                              00000006
ADIP                              00000006
ADON                              00000000
ADRESH                            00000FC4
ADRESL                            00000FC3
AHEN                              00000001
AN0                               00000000
AN1                               00000001
AN2                               00000002
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 33


SYMBOL TABLE
  LABEL                             VALUE 

AN3                               00000003
AN4                               00000005
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA3                             00000003
ANSA5                             00000005
ANSB0                             00000000
ANSB1                             00000001
ANSB2                             00000002
ANSB3                             00000003
ANSB4                             00000004
ANSB5                             00000005
ANSC2                             00000002
ANSC6                             00000006
ANSC7                             00000007
ANSELA                            00000F5B
ANSELB                            00000F5C
ANSELC                            00000F5D
BANKED                            00000001
BAUDCON                           00000FB8
BAUDCON1                          00000FB8
BCL1IE                            00000003
BCL1IF                            00000003
BCL1IP                            00000003
BCLIE                             00000003
BCLIF                             00000003
BCLIP                             00000003
BF                                00000000
BGVST                             00000006
BOEN                              00000004
BOR                               00000000
BRG0                              00000000
BRG1                              00000001
BRG10                             00000002
BRG11                             00000003
BRG12                             00000004
BRG13                             00000005
BRG14                             00000006
BRG15                             00000007
BRG16                             00000003
BRG2                              00000002
BRG3                              00000003
BRG4                              00000004
BRG5                              00000005
BRG6                              00000006
BRG7                              00000007
BRG8                              00000000
BRG9                              00000001
BRGH                              00000002
BSR                               00000FE0
BTOEE                             00000004
BTOEF                             00000004
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 34


SYMBOL TABLE
  LABEL                             VALUE 

BTSEE                             00000007
BTSEF                             00000007
BitMask                           00000004
BitMask2                          00000005
Brightness                        00000000
Buffer                            00000700
Buffer2                           00000710
BufferPause                       00000720
C                                 00000000
C1CH0                             00000000
C1CH1                             00000001
C1HYS                             00000003
C1IE                              00000006
C1IF                              00000006
C1IP                              00000006
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1POL                             00000004
C1R                               00000002
C1RSEL                            00000005
C1SP                              00000003
C1SYNC                            00000001
C1TSEL                            00000000
C2CH0                             00000000
C2CH1                             00000001
C2HYS                             00000002
C2IE                              00000005
C2IF                              00000005
C2IP                              00000005
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2POL                             00000004
C2R                               00000002
C2RSEL                            00000004
C2SP                              00000003
C2SYNC                            00000000
C2TSEL                            00000003
CCH0                              00000000
CCH1                              00000001
CCP1                              00000002
CCP1ASE                           00000007
CCP1CON                           00000FBD
CCP1IE                            00000002
CCP1IF                            00000002
CCP1IP                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1MD                            00000000
CCP1X                             00000005
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 35


SYMBOL TABLE
  LABEL                             VALUE 

CCP1Y                             00000004
CCP2CON                           00000F97
CCP2IE                            00000000
CCP2IF                            00000000
CCP2IP                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2MD                            00000001
CCP2X                             00000005
CCP2Y                             00000004
CCPR1                             00000FBE
CCPR1H                            00000FBF
CCPR1L                            00000FBE
CCPR2                             00000F90
CCPR2H                            00000F91
CCPR2L                            00000F90
CCPTMRS                           00000F59
CFGS                              00000006
CK                                00000006
CKE                               00000006
CKP                               00000004
CKTXP                             00000004
CM1CON0                           00000F98
CM1IE                             00000006
CM1IF                             00000006
CM1IP                             00000006
CM2CON0                           00000F99
CM2CON1                           00000F9A
CM2IE                             00000005
CM2IF                             00000005
CM2IP                             00000005
CMP1MD                            00000003
CMP2MD                            00000004
COE                               00000005
CON                               00000007
COUT1                             00000006
COUT2                             00000006
CPOL                              00000004
CRC16EE                           00000002
CRC16EF                           00000002
CRC5EE                            00000001
CRC5EF                            00000001
CREF                              00000002
CREN                              00000004
CSRC                              00000007
CTMUCON0                          00000F8F
CTMUCON1                          00000F8E
CTMUCONH                          00000F8F
CTMUCONL                          00000F8E
CTMUEN                            00000007
CTMUICON                          00000F88
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 36


SYMBOL TABLE
  LABEL                             VALUE 

CTMUIE                            00000003
CTMUIF                            00000003
CTMUIP                            00000003
CTMUMD                            00000005
CTMUSIDL                          00000005
CTTRIG                            00000000
DACEN                             00000007
DACLPS                            00000006
DACNSS                            00000000
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DDRA                              TRISA
DDRB                              TRISB
DDRC                              TRISC
DDRD                              TRISD
DDRE                              TRISE
DFN8EE                            00000003
DFN8EF                            00000003
DHEN                              00000000
DIR                               00000002
DONE                              00000001
DTRXP                             00000005
D_NOT_A                           00000005
ECCP1AS                           00000FB6
ECCP1AS0                          00000004
ECCP1AS1                          00000005
ECCP1AS2                          00000006
ECCP1ASE                          00000007
ECCP1CON                          00000FBD
ECCP1DEL                          00000FB7
ECCP2CON                          00000F97
EDG1POL                           00000004
EDG1SEL0                          00000002
EDG1SEL1                          00000003
EDG1STAT                          00000000
EDG2POL                           00000007
EDG2SEL0                          00000005
EDG2SEL1                          00000006
EDG2STAT                          00000001
EDGEN                             00000003
EDGSEQEN                          00000002
EEADR                             00000FA9
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 37


SYMBOL TABLE
  LABEL                             VALUE 

EECON1                            00000FA6
EECON2                            00000FA7
EEDATA                            00000FA8
EEIE                              00000004
EEIF                              00000004
EEIP                              00000004
EEPGD                             00000007
ENDP0                             00000003
ENDP1                             00000004
ENDP2                             00000005
ENDP3                             00000006
EPCONDIS                          00000003
EPHSHK                            00000004
EPINEN                            00000001
EPOUTEN                           00000002
EPSTALL                           00000000
FAST                              00000001
FERR                              00000002
FLTS                              00000002
FREE                              00000004
FRM0                              00000000
FRM1                              00000001
FRM10                             00000002
FRM2                              00000002
FRM3                              00000003
FRM4                              00000004
FRM5                              00000005
FRM6                              00000006
FRM7                              00000007
FRM8                              00000000
FRM9                              00000001
FSEN                              00000002
FSR0                              00000000
FSR0H                             00000FEA
FSR0L                             00000FE9
FSR0temp                          00000017
FSR1                              00000001
FSR1H                             00000FE2
FSR1L                             00000FE1
FSR2                              00000002
FSR2H                             00000FDA
FSR2L                             00000FD9
FVREN                             00000007
FVRS0                             00000004
FVRS1                             00000005
FVRST                             00000006
Flag                              00000001
GCEN                              00000007
GIE                               00000007
GIEH                              00000007
GIEL                              00000006
GIE_GIEH                          00000007
GO                                00000001
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 38


SYMBOL TABLE
  LABEL                             VALUE 

GO_NOT_DONE                       00000001
HFIOFR                            00000001
HFIOFS                            00000002
HLVDCON                           00000F9C
HLVDEN                            00000004
HLVDIE                            00000002
HLVDIF                            00000002
HLVDIN                            00000005
HLVDIP                            00000002
HLVDL0                            00000000
HLVDL1                            00000001
HLVDL2                            00000002
HLVDL3                            00000003
IDISSEN                           00000001
IDLEIE                            00000004
IDLEIF                            00000004
IDLEN                             00000007
INDF0                             00000FEF
INDF1                             00000FE7
INDF2                             00000FDF
INT0                              00000000
INT0E                             00000004
INT0F                             00000001
INT0IE                            00000004
INT0IF                            00000001
INT1                              00000001
INT1E                             00000003
INT1F                             00000000
INT1IE                            00000003
INT1IF                            00000000
INT1IP                            00000006
INT1P                             00000006
INT2                              00000002
INT2E                             00000004
INT2F                             00000001
INT2IE                            00000004
INT2IF                            00000001
INT2IP                            00000007
INT2P                             00000007
INTCON                            00000FF2
INTCON2                           00000FF1
INTCON3                           00000FF0
INTEDG0                           00000006
INTEDG1                           00000005
INTEDG2                           00000004
INTSRC                            00000005
IOCB                              00000F86
IOCB4                             00000004
IOCB5                             00000005
IOCB6                             00000006
IOCB7                             00000007
IOCC                              00000F87
IOCC0                             00000000
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 39


SYMBOL TABLE
  LABEL                             VALUE 

IOCC1                             00000001
IOCC2                             00000002
IOCC4                             00000004
IOCC5                             00000005
IOCC6                             00000006
IOCC7                             00000007
IOCIE                             00000003
IOCIF                             00000000
IOCIP                             00000000
IPEN                              00000007
IPR1                              00000F9F
IPR2                              00000FA2
IPR3                              00000FA5
IRCF0                             00000004
IRCF1                             00000005
IRCF2                             00000006
IRNG0                             00000000
IRNG1                             00000001
IRVST                             00000005
ITRIM0                            00000002
ITRIM1                            00000003
ITRIM2                            00000004
ITRIM3                            00000005
ITRIM4                            00000006
ITRIM5                            00000007
InnerInt                          00000014
KeyEdge                           00000003
LATA                              00000F89
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA5                             00000005
LATA6                             00000006
LATA7                             00000007
LATB                              00000F8A
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LATC                              00000F8B
LATC0                             00000000
LATC1                             00000001
LATC2                             00000002
LATC4                             00000004
LATC5                             00000005
LATC6                             00000006
LATC7                             00000007
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 40


SYMBOL TABLE
  LABEL                             VALUE 

LFIOFS                            00000000
LVDIE                             00000002
LVDIF                             00000002
LVDIN                             00000005
LVDIP                             00000002
MC1OUT                            00000007
MC2OUT                            00000006
MSSP1MD                           00000006
MSSPMD                            00000006
MYserial                          0000001E
Ma0                               0000000C
Ma1                               0000000D
Ma2                               0000000E
Ma3                               0000000F
Mc0                               00000010
Mc1                               00000011
Mc2                               00000012
Mc3                               00000013
N                                 00000004
NOT_BOR                           00000000
NOT_DONE                          00000001
NOT_PD                            00000002
NOT_POR                           00000001
NOT_RBPU                          00000007
NOT_RI                            00000004
NOT_T1DONE                        00000003
NOT_T1SYNC                        00000002
NOT_T3DONE                        00000003
NOT_T3SYNC                        00000002
NOT_TO                            00000003
NVCFG0                            00000000
NVCFG1                            00000001
OERR                              00000001
ON                                00000007
OSC2                              00000006
OSCCON                            00000FD3
OSCCON2                           00000FD2
OSCFIE                            00000007
OSCFIF                            00000007
OSCFIP                            00000007
OSCTUNE                           00000F9B
OSTS                              00000003
OV                                00000003
Offset                            00000000
OutPlusInt                        00000016
OuterInt                          00000015
P                                 00000004
P1A                               00000002
P1M0                              00000006
P1M1                              00000007
P1RSEN                            00000007
PC                                00000FF9
PCIE                              00000006
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 41


SYMBOL TABLE
  LABEL                             VALUE 

PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PD                                00000002
PDC0                              00000000
PDC1                              00000001
PDC2                              00000002
PDC3                              00000003
PDC4                              00000004
PDC5                              00000005
PDC6                              00000006
PEIE                              00000006
PEIE_GIEL                         00000006
PEN                               00000002
PGC                               00000006
PGD                               00000007
PGM                               00000005
PIDEE                             00000000
PIDEF                             00000000
PIE1                              00000F9D
PIE2                              00000FA0
PIE3                              00000FA3
PIR1                              00000F9E
PIR2                              00000FA1
PIR3                              00000FA4
PKTDIS                            00000004
PLLEN                             00000004
PLLRDY                            00000007
PLUSW0                            00000FEB
PLUSW1                            00000FE3
PLUSW2                            00000FDB
PMD0                              00000F7E
PMD1                              00000F7F
POR                               00000001
PORTA                             00000F80
PORTB                             00000F81
PORTC                             00000F82
PORTE                             00000F84
POSTDEC0                          00000FED
POSTDEC1                          00000FE5
POSTDEC2                          00000FDD
POSTINC0                          00000FEE
POSTINC1                          00000FE6
POSTINC2                          00000FDE
PPB0                              00000000
PPB1                              00000001
PPBI                              00000001
PPBRST                            00000006
PR1SEN                            00000007
PR2                               00000FBB
PREINC0                           00000FEC
PREINC1                           00000FE4
PREINC2                           00000FDC
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 42


SYMBOL TABLE
  LABEL                             VALUE 

PRISD                             00000002
PROD                              00000FF3
PRODH                             00000FF4
PRODL                             00000FF3
PSA                               00000003
PSS1AC0                           00000002
PSS1AC1                           00000003
PSS1BD0                           00000000
PSS1BD1                           00000001
PSSAC0                            00000002
PSSAC1                            00000003
PSSBD0                            00000000
PSSBD1                            00000001
PSTR1CON                          00000FB9
PVCFG0                            00000002
PVCFG1                            00000003
PWM1CON                           00000FB7
RA0                               00000000
RA1                               00000001
RA2                               00000002
RA3                               00000003
RA4                               00000004
RA5                               00000005
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB5                               00000005
RB6                               00000006
RB7                               00000007
RBPU                              00000007
RC0                               00000000
RC1                               00000001
RC1IE                             00000005
RC1IF                             00000005
RC1IP                             00000005
RC2                               00000002
RC4                               00000004
RC5                               00000005
RC6                               00000006
RC7                               00000007
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCIP                              00000005
RCMT                              00000006
RCON                              00000FD0
RCREG                             00000FAE
RCREG1                            00000FAE
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 43


SYMBOL TABLE
  LABEL                             VALUE 

RCSTA                             00000FAB
RCSTA1                            00000FAB
RD                                00000000
RD16                              00000001
RE3                               00000003
RESUME                            00000002
RI                                00000004
RSEN                              00000001
RX                                00000007
RX9                               00000006
RX9D                              00000000
RXDTP                             00000005
RXFlag                            00000002
RXbuf.ovf                         000003C2
RXpatience                        0000001B
RXptr                             00000019
RXserial                          0000001C
R_NOT_W                           00000002
Received                          0000001A
Rotor0                            00000007
Rotor1                            00000008
Rotor2                            00000009
Rotor3                            0000000A
Rotor4                            0000000B
S                                 00000003
SBCDE                             00000002
SBOREN                            00000006
SCIE                              00000005
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SDAHT                             00000003
SE0                               00000005
SEN                               00000000
SENDB                             00000003
SIDL                              00000005
SLRA                              00000000
SLRB                              00000001
SLRC                              00000002
SLRCON                            00000F7A
SMP                               00000007
SOFIE                             00000006
SOFIF                             00000006
SOSCEN                            00000003
SOSCGO                            00000003
SOSCRUN                           00000006
SP0                               00000000
SP1                               00000001
SP2                               00000002
SP3                               00000003
SP4                               00000004
SPBRG                             00000FAF
SPBRG1                            00000FAF
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 44


SYMBOL TABLE
  LABEL                             VALUE 

SPBRGH                            00000FB0
SPBRGH1                           00000FB0
SPEN                              00000007
SPLLMULT                          00000007
SRCLK0                            00000004
SRCLK1                            00000005
SRCLK2                            00000006
SRCON0                            00000F58
SRCON1                            00000F57
SREN                              00000005
SRLEN                             00000007
SRNQEN                            00000002
SRPR                              00000000
SRPS                              00000001
SRQEN                             00000003
SRRC1E                            00000000
SRRC2E                            00000001
SRRCKE                            00000002
SRRPE                             00000003
SRSC1E                            00000004
SRSC2E                            00000005
SRSCKE                            00000006
SRSPE                             00000007
SSP1ADD                           00000FC8
SSP1ADD0                          00000000
SSP1ADD1                          00000001
SSP1ADD2                          00000002
SSP1ADD3                          00000003
SSP1ADD4                          00000004
SSP1ADD5                          00000005
SSP1ADD6                          00000006
SSP1ADD7                          00000007
SSP1BUF                           00000FC9
SSP1CON                           00000FC6
SSP1CON1                          00000FC6
SSP1CON2                          00000FC5
SSP1CON3                          00000FCB
SSP1IE                            00000003
SSP1IF                            00000003
SSP1IP                            00000003
SSP1MD                            00000006
SSP1MSK                           00000FCA
SSP1MSK0                          00000000
SSP1MSK1                          00000001
SSP1MSK2                          00000002
SSP1MSK3                          00000003
SSP1MSK4                          00000004
SSP1MSK5                          00000005
SSP1MSK6                          00000006
SSP1MSK7                          00000007
SSP1STAT                          00000FC7
SSPADD                            00000FC8
SSPBUF                            00000FC9
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 45


SYMBOL TABLE
  LABEL                             VALUE 

SSPCON                            00000FC6
SSPCON2                           00000FC5
SSPCON3                           00000FCB
SSPEN                             00000005
SSPIE                             00000003
SSPIF                             00000003
SSPIP                             00000003
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000FCA
SSPOV                             00000006
SSPSTAT                           00000FC7
STALLIE                           00000005
STALLIF                           00000005
STATUS                            00000FD8
STCON                             00000FB5
STEN                              00000007
STIE                              00000007
STIF                              00000007
STIP                              00000007
STKFUL                            00000007
STKOVF                            00000007
STKPTR                            00000FFC
STKUNF                            00000006
STLOCK                            00000003
STMD                              00000004
STOR                              00000001
STR1A                             00000000
STR1B                             00000001
STR1C                             00000002
STR1D                             00000003
STR1SYNC                          00000004
STRA                              00000000
STRB                              00000001
STRC                              00000002
STRD                              00000003
STRSYNC                           00000004
STSRC                             00000004
STUD                              00000006
SUSPND                            00000001
SWDTE                             00000000
SWDTEN                            00000000
SYNC                              00000004
T08BIT                            00000006
T0CKI                             00000004
T0CON                             00000FD5
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0IP                              00000002
T0PS0                             00000000
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 46


SYMBOL TABLE
  LABEL                             VALUE 

T0PS1                             00000001
T0PS2                             00000002
T0SE                              00000004
T0period                          00000006
T13CKI                            00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000FCD
T1DONE                            00000003
T1GCON                            00000FCC
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GGO_NOT_T1DONE                  00000003
T1GPOL                            00000006
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T1OSCEN                           00000003
T1OSI                             00000001
T1OSO                             00000000
T1RD16                            00000001
T1SOSCEN                          00000003
T1SYNC                            00000002
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             00000FBA
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T3CKPS0                           00000004
T3CKPS1                           00000005
T3CON                             00000FB1
T3DONE                            00000003
T3GCON                            00000FB4
T3GGO                             00000003
T3GGO_NOT_DONE                    00000003
T3GGO_NOT_T3DONE                  00000003
T3GPOL                            00000006
T3GSPM                            00000004
T3GSS0                            00000000
T3GSS1                            00000001
T3GTM                             00000005
T3GVAL                            00000002
T3OSCEN                           00000003
T3RD16                            00000001
T3SOSCEN                          00000003
T3SYNC                            00000002
TABLAT                            00000FF5
TBLPTR                            00000FF6
TBLPTRH                           00000FF7
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 47


SYMBOL TABLE
  LABEL                             VALUE 

TBLPTRL                           00000FF6
TBLPTRU                           00000FF8
TGEN                              00000004
TMR0                              00000FD6
TMR0H                             00000FD7
TMR0IE                            00000005
TMR0IF                            00000002
TMR0IP                            00000002
TMR0L                             00000FD6
TMR0ON                            00000007
TMR1                              00000FCE
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000000
TMR1GIF                           00000000
TMR1GIP                           00000000
TMR1H                             00000FCF
TMR1IE                            00000000
TMR1IF                            00000000
TMR1IP                            00000000
TMR1L                             00000FCE
TMR1MD                            00000000
TMR1ON                            00000000
TMR2                              00000FBC
TMR2IE                            00000001
TMR2IF                            00000001
TMR2IP                            00000001
TMR2MD                            00000001
TMR2ON                            00000002
TMR3                              00000FB2
TMR3CS0                           00000006
TMR3CS1                           00000007
TMR3GE                            00000007
TMR3GIE                           00000001
TMR3GIF                           00000001
TMR3GIP                           00000001
TMR3H                             00000FB3
TMR3IE                            00000001
TMR3IF                            00000001
TMR3IP                            00000001
TMR3L                             00000FB2
TMR3MD                            00000002
TMR3ON                            00000000
TO                                00000003
TOS                               00000FFD
TOSH                              00000FFE
TOSL                              00000FFD
TOSU                              00000FFF
TRIGEN                            00000000
TRIGSEL                           00000007
TRISA                             00000F92
TRISA0                            00000000
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 48


SYMBOL TABLE
  LABEL                             VALUE 

TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             00000F93
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRISC                             00000F94
TRISC0                            00000000
TRISC1                            00000001
TRISC2                            00000002
TRISC4                            00000004
TRISC5                            00000005
TRISC6                            00000006
TRISC7                            00000007
TRMT                              00000001
TRNIE                             00000003
TRNIF                             00000003
TSEN                              00000003
TSRNG                             00000002
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TUN6                              00000006
TX                                00000006
TX1IE                             00000004
TX1IF                             00000004
TX1IP                             00000004
TX9                               00000006
TX9D                              00000000
TXCKP                             00000004
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXIP                              00000004
TXREG                             00000FAD
TXREG1                            00000FAD
TXSTA                             00000FAC
TXSTA1                            00000FAC
UA                                00000001
UADDR                             00000F63
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 49


SYMBOL TABLE
  LABEL                             VALUE 

UART1MD                           00000006
UARTMD                            00000006
UCFG                              00000F62
UCON                              00000F60
UEIE                              00000F66
UEIR                              00000F67
UEP0                              00000F6A
UEP1                              00000F6B
UEP10                             00000F74
UEP11                             00000F75
UEP12                             00000F76
UEP13                             00000F77
UEP14                             00000F78
UEP15                             00000F79
UEP2                              00000F6C
UEP3                              00000F6D
UEP4                              00000F6E
UEP5                              00000F6F
UEP6                              00000F70
UEP7                              00000F71
UEP8                              00000F72
UEP9                              00000F73
UERRIE                            00000001
UERRIF                            00000001
UFRM                              00000F68
UFRMH                             00000F69
UFRML                             00000F68
UIE                               00000F64
UIR                               00000F65
UOEMON                            00000006
UPUEN                             00000004
URSTIE                            00000000
URSTIF                            00000000
USBEN                             00000003
USBIE                             00000002
USBIF                             00000002
USBIP                             00000002
USBMD                             00000005
USTAT                             00000F61
UTEYE                             00000007
UTRDIS                            00000003
VDIRMAG                           00000007
VREFCON0                          00000F7D
VREFCON1                          00000F7C
VREFCON2                          00000F7B
VREFM                             00000002
VREFP                             00000003
W                                 00000000
WCOL                              00000007
WDTCON                            00000FD1
WPUB                              00000F85
WPUB0                             00000000
WPUB1                             00000001
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 50


SYMBOL TABLE
  LABEL                             VALUE 

WPUB2                             00000002
WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREG                              00000FE8
WREN                              00000002
WRERR                             00000003
WUE                               00000001
Z                                 00000002
_BOREN_NOSLP_2L                   000000FD
_BOREN_OFF_2L                     000000F9
_BOREN_ON_2L                      000000FB
_BOREN_SBORDIS_2L                 000000FF
_BORV_190_2L                      000000FF
_BORV_220_2L                      000000F7
_BORV_250_2L                      000000EF
_BORV_285_2L                      000000E7
_CCP2MX_RB3_3H                    000000FE
_CCP2MX_RC1_3H                    000000FF
_CFGPLLEN_OFF_1L                  000000FD
_CFGPLLEN_ON_1L                   000000FF
_CONFIG1H                         00300001
_CONFIG1L                         00300000
_CONFIG2H                         00300003
_CONFIG2L                         00300002
_CONFIG3H                         00300005
_CONFIG4L                         00300006
_CONFIG5H                         00300009
_CONFIG5L                         00300008
_CONFIG6H                         0030000B
_CONFIG6L                         0030000A
_CONFIG7H                         0030000D
_CONFIG7L                         0030000C
_CP0_OFF_5L                       000000FF
_CP0_ON_5L                        000000FE
_CP1_OFF_5L                       000000FF
_CP1_ON_5L                        000000FD
_CP2_OFF_5L                       000000FF
_CP2_ON_5L                        000000FB
_CP3_OFF_5L                       000000FF
_CP3_ON_5L                        000000F7
_CPB_OFF_5H                       000000FF
_CPB_ON_5H                        000000BF
_CPD_OFF_5H                       000000FF
_CPD_ON_5H                        0000007F
_CPUDIV_CLKDIV2_1L                000000EF
_CPUDIV_CLKDIV3_1L                000000F7
_CPUDIV_CLKDIV6_1L                000000FF
_CPUDIV_NOCLKDIV_1L               000000E7
_DEBUG_OFF_4L                     000000FF
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 51


SYMBOL TABLE
  LABEL                             VALUE 

_DEBUG_ON_4L                      0000007F
_DEVID1                           003FFFFE
_DEVID2                           003FFFFF
_EBTR0_OFF_7L                     000000FF
_EBTR0_ON_7L                      000000FE
_EBTR1_OFF_7L                     000000FF
_EBTR1_ON_7L                      000000FD
_EBTR2_OFF_7L                     000000FF
_EBTR2_ON_7L                      000000FB
_EBTR3_OFF_7L                     000000FF
_EBTR3_ON_7L                      000000F7
_EBTRB_OFF_7H                     000000FF
_EBTRB_ON_7H                      000000BF
_FCMEN_OFF_1H                     000000BF
_FCMEN_ON_1H                      000000FF
_FOSC_ECHCLKO_1H                  000000F4
_FOSC_ECHIO_1H                    000000F5
_FOSC_ECLCLKO_1H                  000000FC
_FOSC_ECLIO_1H                    000000FD
_FOSC_ECMCLKO_1H                  000000FA
_FOSC_ECMIO_1H                    000000FB
_FOSC_HSH_1H                      000000F2
_FOSC_HSM_1H                      000000F3
_FOSC_INTOSCCLKO_1H               000000F9
_FOSC_INTOSCIO_1H                 000000F8
_FOSC_LP_1H                       000000F0
_FOSC_RCCLKO_1H                   000000F6
_FOSC_RCIO_1H                     000000F7
_FOSC_XT_1H                       000000F1
_ICPRT_OFF_4L                     000000DF
_IDLOC0                           00200000
_IDLOC1                           00200001
_IDLOC2                           00200002
_IDLOC3                           00200003
_IDLOC4                           00200004
_IDLOC5                           00200005
_IDLOC6                           00200006
_IDLOC7                           00200007
_IESO_OFF_1H                      0000007F
_IESO_ON_1H                       000000FF
_LS48MHZ_SYS24X4_1L               000000DF
_LS48MHZ_SYS48X8_1L               000000FF
_LVP_OFF_4L                       000000FB
_LVP_ON_4L                        000000FF
_MCLRE_OFF_3H                     0000007F
_MCLRE_ON_3H                      000000FF
_PBADEN_OFF_3H                    000000FD
_PBADEN_ON_3H                     000000FF
_PCLKEN_OFF_1H                    000000DF
_PCLKEN_ON_1H                     000000FF
_PLLSEL_PLL3X_1L                  000000FF
_PLLSEL_PLL4X_1L                  000000FE
_SDOMX_RB3_3H                     000000FF
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 52


SYMBOL TABLE
  LABEL                             VALUE 

_SDOMX_RC7_3H                     000000BF
_STVREN_OFF_4L                    000000FE
_STVREN_ON_4L                     000000FF
_T3CMX_RB5_3H                     000000EF
_T3CMX_RC0_3H                     000000FF
_WDTEN_NOSLP_2H                   000000FD
_WDTEN_OFF_2H                     000000FC
_WDTEN_ON_2H                      000000FF
_WDTEN_SWON_2H                    000000FE
_WDTPS_1024_2H                    000000EB
_WDTPS_128_2H                     000000DF
_WDTPS_16384_2H                   000000FB
_WDTPS_16_2H                      000000D3
_WDTPS_1_2H                       000000C3
_WDTPS_2048_2H                    000000EF
_WDTPS_256_2H                     000000E3
_WDTPS_2_2H                       000000C7
_WDTPS_32768_2H                   000000FF
_WDTPS_32_2H                      000000D7
_WDTPS_4096_2H                    000000F3
_WDTPS_4_2H                       000000CB
_WDTPS_512_2H                     000000E7
_WDTPS_64_2H                      000000DB
_WDTPS_8192_2H                    000000F7
_WDTPS_8_2H                       000000CF
_WRT0_OFF_6L                      000000FF
_WRT0_ON_6L                       000000FE
_WRT1_OFF_6L                      000000FF
_WRT1_ON_6L                       000000FD
_WRT2_OFF_6L                      000000FF
_WRT2_ON_6L                       000000FB
_WRT3_OFF_6L                      000000FF
_WRT3_ON_6L                       000000F7
_WRTB_OFF_6H                      000000FF
_WRTB_ON_6H                       000000BF
_WRTC_OFF_6H                      000000FF
_WRTC_ON_6H                       000000DF
_WRTD_OFF_6H                      000000FF
_WRTD_ON_6H                       0000007F
_XINST_OFF_4L                     000000BF
_XINST_ON_4L                      000000FF
__18LF25K50                       00000001
_nLPBOR_OFF_2L                    000000FF
_nLPBOR_ON_2L                     000000BF
_nPWRTEN_OFF_2L                   000000FF
_nPWRTEN_ON_2L                    000000FE
access                            00000000
accscl                            LATB,2
accscl.port                       PORTB,2
accscl.ts                         TRISB,2
accsda                            LATB,4
accsda.port                       PORTB,4
accsda.ts                         TRISB,4
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 53


SYMBOL TABLE
  LABEL                             VALUE 

ad.convert                        000005C2
banked                            00000001
bright.tab                        00000430
bright0                           00000003
bright1                           00000004
bright10                          0000001E
bright11                          00000025
bright12                          0000002D
bright13                          00000036
bright14                          00000041
bright15                          0000004D
bright2                           00000005
bright3                           00000006
bright4                           00000008
bright5                           0000000A
bright6                           0000000C
bright7                           0000000F
bright8                           00000013
bright9                           00000018
clk                               LATB,1
column.anode                      0000012A
column.any                        0000022C
cont                              0000075C
debounce.off                      0000041E
def.txt                           0000052A
disp.detect                       00000552
ee.rd                             0000054A
exit.ee                           0000053E
exit2                             000003F0
go.rd.ee                          0000051E
goclr1                            000004B8
goclr2                            000004C2
goclr3                            000004CC
goclr4                            000004D6
greeting                          00000674
header.in.progress                00000334
ifc                               
ifnc                              
ifnz                              
ifz                               
in.progress                       00000390
interrupt_8                       00000010
iorbuf                            
iorbuf3                           
it.was.int0                       000003F6
keyint                            PORTB,0
keys                              PORTB,6
main                              00000450
no.bright.up                      000002D4
no.reconstruction                 00000138
no.rx                             000003C4
no.test                           00000312
no.test.0                         00000258
MPASM  5.51                        KERNEL.ASM   3-23-2016  22:20:14         PAGE 54


SYMBOL TABLE
  LABEL                             VALUE 

no.test.1                         00000274
no.test.14                        000002F2
no.test.2                         00000290
no.test.x                         000002F4
onebit                            
overlap                           
pause.mode                        00000306
preset.pat                        000003BC
rcf                               
rnd                               000005D8
rx.enabled                        0000031A
rx.exit                           000003E8
rx.ser.terminator                 00000378
scf                               
sdo                               LATB,3
serial                            000004D2
serialx2                          
sleeping.time                     000003FA
still.rxpat                       000003D2
sync150                           
sync150x8                         
test.new                          
transfer.greeting                 00000536
tx.ascnum                         000005CC
tx.byte                           000005D0
usbv                              PORTC,0
vdd                               LATB,5
wait.conv                         000005C4
wait.keyint.released              00000418
xx                                0000000F

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

